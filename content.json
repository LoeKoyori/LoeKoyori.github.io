{"meta":{"title":"Loe-Koyori还在施工的家","subtitle":null,"description":"Deployed by Koyori","author":"Loe-Koyori","url":"https://blogdemo.playmarxcards.online"},"pages":[{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2021-05-06T14:04:18.023Z","comments":true,"path":"comment/index.html","permalink":"https://blogdemo.playmarxcards.online/comment/index.html","excerpt":"","text":"念两句诗 苟利国家生死以，岂因祸福避趋之！ 【清代】林则徐《赴戍登程口占示家人二首》","keywords":"留言板"},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2021-05-12T07:04:54.558Z","comments":false,"path":"about/index.html","permalink":"https://blogdemo.playmarxcards.online/about/index.html","excerpt":"","text":"[Loe - Koyori] 与&nbsp; Loe&nbsp; （ ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"donate","date":"2021-05-07T12:39:05.000Z","updated":"2021-05-07T12:39:53.051Z","comments":false,"path":"donate/index.html","permalink":"https://blogdemo.playmarxcards.online/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了哦~"},{"title":"客户端","date":"2018-12-20T15:13:35.000Z","updated":"2021-05-12T07:08:57.551Z","comments":false,"path":"client/index.html","permalink":"https://blogdemo.playmarxcards.online/client/index.html","excerpt":"","text":"直接下载 or 扫码下载： 稍微做了一点移动端的优化，但做得不是很完善。随缘更新。重构是不可能重构的，这辈子都不可能重构的","keywords":"Android客户端"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2021-05-06T12:10:48.733Z","comments":true,"path":"links/index.html","permalink":"https://blogdemo.playmarxcards.online/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"","date":"2021-05-16T11:49:50.262Z","updated":"2021-05-16T11:49:50.262Z","comments":true,"path":"lab/index.html","permalink":"https://blogdemo.playmarxcards.online/lab/index.html","excerpt":"","text":""},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2021-05-10T14:02:01.413Z","comments":false,"path":"music/index.html","permalink":"https://blogdemo.playmarxcards.online/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"","date":"2021-05-08T14:19:00.858Z","updated":"2021-05-08T13:47:52.548Z","comments":true,"path":"photo/photo.html","permalink":"https://blogdemo.playmarxcards.online/photo/photo.html","excerpt":"","text":"图集 | 樱花🌸 html { overflow:hidden; -ms-touch-action:none; -ms-content-zooming:none; } body { position:absolute; margin:0px; padding:0px; background:#fff; width:100%; height:100%; } #canvas { position:absolute; width:100%; height:100%; background:#fff; } \"use strict\"; (function () { /* ==== definitions ==== */ var diapo = [], layers = [], ctx, pointer, scr, camera, light, fps = 0, quality = [1,2], // ---- poly constructor ---- Poly = function (parent, face) { this.parent = parent; this.ctx = ctx; this.color = face.fill || false; this.points = []; if (!face.img) { // ---- create points ---- for (var i = 0; i < 4; i++) { this.points[i] = new ge1doot.transform3D.Point( parent.pc.x + (face.x[i] * parent.normalZ) + (face.z[i] * parent.normalX), parent.pc.y + face.y[i], parent.pc.z + (face.x[i] * parent.normalX) + (-face.z[i] * parent.normalZ) ); } this.points[3].next = false; } }, // ---- diapo constructor ---- Diapo = function (path, img, structure) { // ---- create image ---- this.img = new ge1doot.transform3D.Image( this, path + img.img, 1, { isLoaded: function(img) { img.parent.isLoaded = true; img.parent.loaded(img); } } ); this.visible = false; this.normalX = img.nx; this.normalZ = img.nz; // ---- point center ---- this.pc = new ge1doot.transform3D.Point(img.x, img.y, img.z); // ---- target positions ---- this.tx = img.x + (img.nx * Math.sqrt(camera.focalLength) * 20); this.tz = img.z - (img.nz * Math.sqrt(camera.focalLength) * 20); // ---- create polygons ---- this.poly = []; for (var i = -1, p; p = structure[++i];) { layers[i] = (p.img === true ? 1 : 2); this.poly.push( new Poly(this, p) ); } }, // ---- init section ---- init = function (json) { // draw poly primitive Poly.prototype.drawPoly = ge1doot.transform3D.drawPoly; // ---- init screen ---- scr = new ge1doot.Screen({ container: \"canvas\" }); ctx = scr.ctx; scr.resize(); // ---- init pointer ---- pointer = new ge1doot.Pointer({ tap: function () { if (camera.over) { if (camera.over === camera.target.elem) { // ---- return to the center ---- camera.target.x = camera.target.x; camera.target.z = 0; camera.target.elem = false; } else { // ---- goto diapo ---- camera.target.elem = camera.over; camera.target.x = camera.over.tx; camera.target.z = camera.over.tz; // ---- adapt tesselation level to distance ---- for (var i = 0, d; d = diapo[i++];) { var dx = camera.target.x - d.pc.x; var dz = camera.target.z - d.pc.z; var dist = Math.sqrt(dx * dx + dz * dz); var lev = (dist > 1500) ? quality[0] : quality[1]; d.img.setLevel(lev); } } } } }); // ---- init camera ---- camera = new ge1doot.transform3D.Camera({ focalLength: Math.sqrt(scr.width) * 10, easeTranslation: 0.025, easeRotation: 0.06, disableRz: true }, { move: function () { this.over = false; // ---- rotation ---- if (pointer.isDraging) { this.target.elem = false; this.target.ry = -pointer.Xi * 0.01; this.target.rx = (pointer.Y - scr.height * 0.5) / (scr.height * 0.5); } else { if (this.target.elem) { this.target.ry = Math.atan2( this.target.elem.pc.x - this.x, this.target.elem.pc.z - this.z ); } } this.target.rx *= 0.9; } }); camera.z = -10000; camera.py = 0; // ---- create images ---- for (var i = 0, img; img = json.imgdata[i++];) { diapo.push( new Diapo( json.options.imagesPath, img, json.structure ) ); } // ---- start engine ---- >>> setInterval(function() { quality = (fps > 50) ? [2,3] : [1,2]; fps = 0; }, 1000); run(); }, // ---- main loop ---- run = function () { // ---- clear screen ---- ctx.clearRect(0, 0, scr.width, scr.height); // ---- camera ---- camera.move(); // ---- draw layers ---- for (var k = -1, l; l = layers[++k];) { light = false; for (var i = 0, d; d = diapo[i++];) { (l === 1 && d.draw()) || (d.visible && d.poly[k].draw()); } } // ---- cursor ---- if (camera.over && !pointer.isDraging) { scr.setCursor(\"pointer\"); } else { scr.setCursor(\"move\"); } // ---- loop ---- fps++; requestAnimFrame(run); }; /* ==== prototypes ==== */ Poly.prototype.draw = function () { // ---- color light ---- var c = this.color; if (c.light || !light) { var s = c.light ? this.parent.light : 1; // ---- rgba color ---- light = \"rgba(\" + Math.round(c.r * s) + \",\" + Math.round(c.g * s) + \",\" + Math.round(c.b * s) + \",\" + (c.a || 1) + \")\"; ctx.fillStyle = light; } // ---- paint poly ---- if (!c.light || this.parent.light < 1) { // ---- projection ---- for ( var i = 0; this.points[i++].projection(); ); this.drawPoly(); ctx.fill(); } } /* ==== image onload ==== */ Diapo.prototype.loaded = function (img) { // ---- create points ---- var d = [-1,1,1,-1,1,1,-1,-1]; var w = img.texture.width * 0.5; var h = img.texture.height * 0.5; for (var i = 0; i < 4; i++) { img.points[i] = new ge1doot.transform3D.Point( this.pc.x + (w * this.normalZ * d[i]), this.pc.y + (h * d[i + 4]), this.pc.z + (w * this.normalX * d[i]) ); } } /* ==== images draw ==== */ Diapo.prototype.draw = function () { // ---- visibility ---- this.pc.projection(); if (this.pc.Z > -(camera.focalLength >> 1) && this.img.transform3D(true)) { // ---- light ---- this.light = 0.5 + Math.abs(this.normalZ * camera.cosY - this.normalX * camera.sinY) * 0.6; // ---- draw image ---- this.visible = true; this.img.draw(); // ---- test pointer inside ---- if (pointer.hasMoved || pointer.isDown) { if ( this.img.isPointerInside( pointer.X, pointer.Y ) ) camera.over = this; } } else this.visible = false; return true; } return { // --- load data ---- load : function (data) { window.addEventListener('load', function () { ge1doot.loadJS( \"https://cdn.jsdelivr.net/gh/wang1375830242/CDN/imageTransform3D.js\", init, data ); }, false); } } })().load({ imgdata:[ // north {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/36.jpg', x:-8000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/32.jpg', x:-7000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/28.jpg', x:-6000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/17.jpg', x:-5000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/13.jpg', x:-4000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/8.jpg', x:-3000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/2.jpg', x:-2000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/3.jpg', x:-1000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/4.jpg', x:0, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/11.jpg', x:1000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/5.jpg', x:2000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/9.jpg', x:3000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/12.jpg', x:4000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/22.jpg', x:5000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/29.jpg', x:6000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/33.jpg', x:7000, y:0, z:1500, nx:0, nz:1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/37.jpg', x:8000, y:0, z:1500, nx:0, nz:1}, // east //{img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/2.jpg', x:1500, y:0, z:2000, nx:-1, nz:0}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/15.jpg', x:8500, y:0, z:1000, nx:-1, nz:0}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/18.jpg', x:8500, y:0, z:0, nx:-1, nz:0}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/19.jpg', x:8500, y:0, z:-1000, nx:-1, nz:0}, //{img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/5.jpg', x:1500, y:0, z:-2000, nx:-1, nz:0}, // south {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/38.jpg', x:8000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/34.jpg', x:7000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/30.jpg', x:6000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/23.jpg', x:5000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/14.jpg', x:4000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/10.jpg', x:3000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/6.jpg', x:2000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/20.jpg', x:1000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/21.jpg', x:0, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/24.jpg', x:-1000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/7.jpg', x:-2000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/12.jpg', x:-3000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/16.jpg', x:-4000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/27.jpg', x:-5000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/31.jpg', x:-6000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/35.jpg', x:-7000, y:0, z:-1500, nx:0, nz:-1}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/51.jpg', x:-8000, y:0, z:-1500, nx:0, nz:-1}, // west //{img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/6.jpg', x:-1500, y:0, z:-2000, nx:1, nz:0}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/25.jpg', x:-8500, y:0, z:-1000, nx:1, nz:0}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/26.jpg', x:-8500, y:0, z:0, nx:1, nz:0}, {img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/50.jpg', x:-8500, y:0, z:1000, nx:1, nz:0} //{img:'https://cdn.jsdelivr.net/gh/wang1375830242/CDN/7.jpg', x:-1500, y:0, z:2000, nx:1, nz:0}, ], structure:[ { // wall fill: {r:255, g:255, b:255, light:1}, x: [-1001,-490,-490,-1001], z: [-500,-500,-500,-500], // y: [500,500,-500,-500] // 调整墙面的高 },{ // wall fill: {r:255, g:255, b:255, light:1}, x: [-501,2,2,-500], z: [-500,-500,-500,-500], y: [500,500,-500,-500] // 调整墙面的高 },{ // wall fill: {r:255, g:255, b:255, light:1}, x: [0,502,502,0], z: [-500,-500,-500,-500], y: [500,500,-500,-500] // 调整墙面的高 },{ // wall fill: {r:255, g:255, b:255, light:1}, x: [490,1002,1002,490], z: [-500,-500,-500,-500], y: [500,500,-500,-500] // 调整墙面的高 },{ // shadow fill: {r:0, g:0, b:0, a:0.2}, x: [-420,420,420,-420], z: [-500,-500,-500,-500], y: [150, 150,-320,-320] },{ // shadow fill: {r:0, g:0, b:0, a:0.2}, x: [-20,20,20,-20], z: [-500,-500,-500,-500], y: [250, 250,150,150] },{ // shadow fill: {r:0, g:0, b:0, a:0.2}, x: [-20,20,20,-20], z: [-500,-500,-500,-500], y: [-320, -320,-500,-500] },{ // shadow fill: {r:0, g:0, b:0, a:0.2}, x: [-20,20,10,-10], z: [-500,-500,-100,-100], y: [-500, -500,-500,-500] },{ // base fill: {r:32, g:32, b:32}, x: [-50,50,50,-50], z: [-150,-150,-50,-50], y: [-500,-500,-500,-500] },{ // support fill: {r:16, g:16, b:16}, x: [-10,10,10,-10], z: [-100,-100,-100,-100], y: [300,300,-500,-500] },{ // frame fill: {r:255, g:255, b:255}, x: [-320,-320,-320,-320], z: [0,-20,-20,0], y: [-190,-190,190,190] },{ // frame fill: {r:255, g:255, b:255}, x: [320,320,320,320], z: [0,-20,-20,0], y: [-190,-190,190,190] }, {img:true}, { // ceilingLight fill: {r:255, g:128, b:0}, x: [-50,50,50,-50], z: [450,450,550,550], y: [500,500,500,500] },{ // groundLight fill: {r:255, g:128, b:0}, x: [-50,50,50,-50], z: [450,450,550,550], y: [-500,-500,-500,-500] } ], options:{ imagesPath: \"\" } }); 你的浏览器不支持HTML5画布技术，请使用谷歌浏览器。"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"rss/index.html","permalink":"https://blogdemo.playmarxcards.online/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"tags/index.html","permalink":"https://blogdemo.playmarxcards.online/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2021-05-10T08:32:35.082Z","comments":false,"path":"theme-sakura/index.html","permalink":"https://blogdemo.playmarxcards.online/theme-sakura/index.html","excerpt":"","text":"本博客主题Sakura修改自WordPress主题Sakura，感谢原作者 Mashiro。","keywords":"本博客主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2021-05-16T11:55:14.822Z","comments":false,"path":"video/index.html","permalink":"https://blogdemo.playmarxcards.online/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 相信的心就是你的魔法 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2021-05-09T08:30:08.936Z","comments":false,"path":"bangumi/index.html","permalink":"https://blogdemo.playmarxcards.online/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"","date":"2021-05-08T13:47:52.549Z","updated":"2021-05-08T13:47:52.549Z","comments":true,"path":"photo/js/imageTransform3D.js","permalink":"https://blogdemo.playmarxcards.online/photo/js/imageTransform3D.js","excerpt":"","text":"//////////////////////////////////////////////////////////// // ==== HTML5 CANVAS transform Image ==== // full 3D version // @author Gerard Ferrandez / http://www.dhteumeuleu.com/ // last update: Dec 8, 2012 // Released under the MIT license // http://www.dhteumeuleu.com/LICENSE.html //////////////////////////////////////////////////////////// \"use strict\"; var ge1doot = ge1doot || {}; ge1doot.transform3D = {}; /* ==== draw Poly ==== */ ge1doot.transform3D.drawPoly = function () { this.ctx.beginPath(); this.ctx.moveTo(this.points[0].X, this.points[0].Y); this.ctx.lineTo(this.points[1].X, this.points[1].Y); this.ctx.lineTo(this.points[2].X, this.points[2].Y); this.ctx.lineTo(this.points[3].X, this.points[3].Y); this.ctx.closePath(); } /* =============== camera constructor ================= */ ge1doot.transform3D.Camera = function (setup, func) { ge1doot.camera = this; this.x = 0; this.y = 0; this.z = 0; this.rx = 0; this.ry = 0; this.rz = 0; this.focalLength = setup.focalLength || 500; this.easeTranslation = setup.easeTranslation || 0.1; this.easeRotation = setup.easeRotation || 0.025; this.enableRx = setup.disableRx ? false : true; this.enableRy = setup.disableRy ? false : true; this.enableRz = setup.disableRz ? false : true; this.cmov = false; this.cosX = 1; this.sinX = 0; this.cosY = 1; this.sinY = 0; this.cosZ = 1; this.sinZ = 0; this.target = { over: false, elem: false, x: 0, y: 0, z: 0, rx: 0, ry: 0, rz: 0 }; // ---- def custom move ---- if (func && func.move) this.cmov = func.move; } /* ==== easing ==== */ ge1doot.transform3D.Camera.prototype.ease = function (target, value) { while (Math.abs(target - value) > Math.PI) { if (target < value) value -= 2 * Math.PI; else value += 2 * Math.PI; } return (target - value) * this.easeRotation; } /* ==== move / rotate camera ==== */ ge1doot.transform3D.Camera.prototype.move = function () { // ---- run custom function ---- this.cmov && this.cmov(); // ---- translations ---- this.x += (this.target.x - this.x) * this.easeTranslation; this.y += (this.target.y - this.y) * this.easeTranslation; this.z += (this.target.z - this.z) * this.easeTranslation; // ---- rotation rx ---- if (this.enableRx) { this.rx += this.ease(this.target.rx, this.rx); this.cosX = Math.cos(this.rx); this.sinX = Math.sin(this.rx); } // ---- rotation ry ---- if (this.enableRy) { this.ry += this.ease(this.target.ry, this.ry); this.cosY = Math.cos(this.ry); this.sinY = Math.sin(this.ry); } // ---- rotation rz ---- if (this.enableRz) { this.rz += this.ease(this.target.rz, this.rz); this.cosZ = Math.cos(this.rz); this.sinZ = Math.sin(this.rz); } } /* =============== point constructor ================= */ ge1doot.transform3D.Point = function (x, y, z, tx, ty) { this.x = x; this.y = y; this.z = z; this.tx = tx || 0; this.ty = ty || 0; this.visible = false; this.scale = 0; this.X = 0; this.Y = 0; this.Z = 0; this.next = true; } /* ==== perspective projection ==== */ ge1doot.transform3D.Point.prototype.projection = function () { var sw = this.scr.width >> 1; var sh = this.scr.height >> 1; // ---- 3D coordinates ---- var nx = this.x - this.camera.x; var ny = this.y - this.camera.y; var nz = this.z - this.camera.z; // ---- 3D rotation and projection ---- if (this.camera.enableRz) { var u = this.camera.sinZ * ny + this.camera.cosZ * nx; var t = this.camera.cosZ * ny - this.camera.sinZ * nx; } else { var u = nx; var t = ny; } var s = this.camera.cosY * nz + this.camera.sinY * u; this.Z = this.camera.cosX * s - this.camera.sinX * t; this.scale = this.camera.focalLength / Math.max(1, this.Z); this.X = sw + (this.camera.cosY * u - this.camera.sinY * nz) * this.scale; this.Y = -(this.camera.y >> 1) + sh - (this.camera.sinX * s + this.camera.cosX * t) * this.scale; // ---- visibility test ---- this.visible = ( this.X > -sw * 0.5 && this.X < sw * 2.5 ) && ( this.Y > -sh * 0.5 && this.Y < sh * 2.5 ); // ----return next (fast loop) ---- return this.next; } /* ==== triangle constructor ==== */ ge1doot.transform3D.Triangle = function (parent, p0, p1, p2) { this.ctx = parent.ctx; this.texture = parent.texture; this.p0 = p0; this.p1 = p1; this.p2 = p2; this.d = p0.tx * (p2.ty - p1.ty) - p1.tx * p2.ty + p2.tx * p1.ty + (p1.tx - p2.tx) * p0.ty; this.pmy = p1.ty - p2.ty; this.pmx = p1.tx - p2.tx; this.pxy = p2.tx * p1.ty - p1.tx * p2.ty; if (parent.t) parent.t.next = true; } /* ==== draw triangle ==== */ ge1doot.transform3D.Triangle.prototype.draw = function () { if (this.p0.visible || this.p1.visible || this.p2.visible) { var dx, dy, d; // ---- centroid ---- var xc = (this.p0.X + this.p1.X + this.p2.X) / 3; var yc = (this.p0.Y + this.p1.Y + this.p2.Y) / 3; // ---- clipping ---- this.ctx.save(); this.ctx.beginPath(); dx = xc - this.p0.X; dy = yc - this.p0.Y; d = Math.max(Math.abs(dx), Math.abs(dy)); this.ctx.moveTo(this.p0.X - 2 * (dx / d), this.p0.Y - 2 * (dy / d)); dx = xc - this.p1.X; dy = yc - this.p1.Y; d = Math.max(Math.abs(dx), Math.abs(dy)); this.ctx.lineTo(this.p1.X - 2 * (dx / d), this.p1.Y - 2 * (dy / d)); dx = xc - this.p2.X; dy = yc - this.p2.Y; d = Math.max(Math.abs(dx), Math.abs(dy)); this.ctx.lineTo(this.p2.X - 2 * (dx / d), this.p2.Y - 2 * (dy / d)); this.ctx.closePath(); this.ctx.clip(); // ---- transform ---- var t0 = this.p2.X - this.p1.X, t1 = this.p1.Y - this.p2.Y, t2 = this.p2.ty * this.p1.X, t3 = this.p1.tx * this.p2.X, t4 = this.p2.ty * this.p1.Y, t5 = this.p1.ty * this.p2.X, t6 = this.p1.ty * this.p2.Y, t7 = this.p2.tx * this.p1.X, t8 = this.p1.tx * this.p2.Y, t9 = this.p2.tx * this.p1.Y; this.ctx.transform( -(this.p0.ty * t0 - t5 + t2 + this.pmy * this.p0.X) / this.d, // m11 (t6 + this.p0.ty * t1 - t4 - this.pmy * this.p0.Y) / this.d, // m12 (this.p0.tx * t0 - t3 + t7 + this.pmx * this.p0.X) / this.d, // m21 -(t8 + this.p0.tx * t1 - t9 - this.pmx * this.p0.Y) / this.d, // m22 (this.p0.tx * (t2 - t5) + this.p0.ty * (t3 - t7) + this.pxy * this.p0.X) / this.d, // dx (this.p0.tx * (t4 - t6) + this.p0.ty * (t8 - t9) + this.pxy * this.p0.Y) / this.d // dy ); // ---- draw ---- this.ctx.drawImage(this.texture, 0, 0); this.ctx.restore(); } return this.next; } /* ===================== image constructor ========================== */ ge1doot.transform3D.Image = function (parent, imgSrc, lev, callback) { this.parent = parent; this.points = []; this.triangles = []; this.ctx = ge1doot.screen.ctx; this.pointer = ge1doot.pointer; this.texture = new Image(); this.texture.src = imgSrc; this.isLoading = true; this.callback = callback; this.textureWidth = 0; this.textureHeight = 0; this.level = lev || 1; this.visible = false; this.t = false; if (!ge1doot.transform3D.Point.prototype.scr) { ge1doot.transform3D.Point.prototype.scr = ge1doot.screen; ge1doot.transform3D.Point.prototype.camera = ge1doot.camera; } } /* ==== drawPoly prototype ==== */ ge1doot.transform3D.Image.prototype.drawPoly = ge1doot.transform3D.drawPoly; /* ==== change tessellation level prototype ==== */ ge1doot.transform3D.Image.prototype.setLevel = function (level) { this.points.length = 0; this.triangles.length = 0; this.level = level; this.loading(); } /* ==== loading prototype ==== */ ge1doot.transform3D.Image.prototype.loading = function () { if (this.texture.complete) { var dir = [0,1,1,0,0,0,1,1]; this.isLoading = false; // ---- image size ---- this.textureWidth = this.texture.width; this.textureHeight = this.texture.height; // ---- isLoaded callback --- this.callback && this.callback.isLoaded && this.callback.isLoaded(this); // ---- texture position ---- for (var i = -1, p; p = this.points[++i];) { p.tx = this.textureWidth * dir[i]; p.ty = this.textureHeight * dir[i+4]; } // ---- triangularization ---- this.triangulate(this.points[0], this.points[1], this.points[2], this.level); this.triangulate(this.points[0], this.points[2], this.points[3], this.level); // ---- last point ---- this.points[this.points.length - 1].next = false; } } /* ==== vector bisection function ==== */ ge1doot.transform3D.Image.prototype.subdivise = function (p0, p1) { return { x: (p1.x + p0.x) * 0.5, y: (p1.y + p0.y) * 0.5, z: (p1.z + p0.z) * 0.5, tx: (p1.tx + p0.tx) * 0.5, ty: (p1.ty + p0.ty) * 0.5 }; } /* ==== triangulation ==== */ ge1doot.transform3D.Image.prototype.triangulate = function (p0, p1, p2, level) { level--; if (level === 0) { // final triangle this.t = new ge1doot.transform3D.Triangle(this, p0, p1, p2); this.triangles.push(this.t); } else { // ---- subdivision ---- var p01 = this.subdivise(p0, p1); var p12 = this.subdivise(p1, p2); var p20 = this.subdivise(p2, p0); // ---- insert new points ---- this.points.push(p01 = new ge1doot.transform3D.Point(p01.x, p01.y, p01.z, p01.tx, p01.ty)); this.points.push(p12 = new ge1doot.transform3D.Point(p12.x, p12.y, p12.z, p12.tx, p12.ty)); this.points.push(p20 = new ge1doot.transform3D.Point(p20.x, p20.y, p20.z, p20.tx, p20.ty)); // ---- recursive triangulation ---- this.triangulate(p0, p01, p20, level); this.triangulate(p01, p1, p12, level); this.triangulate(p20, p12, p2, level); this.triangulate(p01, p12, p20, level); } } /* ==== transform prototype ==== */ ge1doot.transform3D.Image.prototype.transform3D = function (backfaceTest) { if (this.isLoading) { // ---- image is loading ---- this.loading(); return false; } else { // ---- project points ---- for ( var i = 0; this.points[i++].projection(); ); if (backfaceTest) { var p0 = this.points[0]; var p1 = this.points[1]; var p2 = this.points[2]; return ( ((p1.Y - p0.Y) / (p1.X - p0.X) - (p2.Y - p0.Y) / (p2.X - p0.X) < 0) ^ (p0.X p2.X) ); } else return true; } } /* ==== draw prototype ==== */ ge1doot.transform3D.Image.prototype.draw = function () { if (!this.isLoading) { // ---- draw triangles ---- for ( var i = 0; this.triangles[i++].draw(); ); } } /* ==== isPointerInside prototype ==== */ ge1doot.transform3D.Image.prototype.isPointerInside = function (x, y) { this.drawPoly(this.points); return this.ctx.isPointInPath(x, y); }"},{"title":"","date":"2021-05-08T13:47:52.548Z","updated":"2021-05-08T13:47:52.548Z","comments":true,"path":"photo/js/ge1doot.js","permalink":"https://blogdemo.playmarxcards.online/photo/js/ge1doot.js","excerpt":"","text":"//////////////////////////////////////////////////////////// // ============= micro HTML5 library ===================== // @author Gerard Ferrandez / http://www.dhteumeuleu.com/ // last update: May 27, 2013 // Released under the MIT license // http://www.dhteumeuleu.com/LICENSE.html //////////////////////////////////////////////////////////// // ===== ge1doot global ===== /* www.jq22.com */ var ge1doot = ge1doot || { json: null, screen: null, pointer: null, camera: null, loadJS: function (url, callback, data) { if (typeof url == \"string\") url = [url]; var load = function (src) { var script = document.createElement(\"script\"); if (callback) { if (script.readyState){ script.onreadystatechange = function () { if (script.readyState == \"loaded\" || script.readyState == \"complete\"){ script.onreadystatechange = null; if (--n === 0) callback(data || false); } } } else { script.onload = function() { if (--n === 0) callback(data || false); } } } script.src = src; document.getElementsByTagName(\"head\")[0].appendChild(script); } for (var i = 0, n = url.length; i < n; i++) load(url[i]); } } // ===== html/canvas container ===== ge1doot.Screen = function (setup) { ge1doot.screen = this; this.elem = document.getElementById(setup.container) || setup.container; this.ctx = this.elem.tagName == \"CANVAS\" ? this.elem.getContext(\"2d\") : false; this.style = this.elem.style; this.left = 0; this.top = 0; this.width = 0; this.height = 0; this.cursor = \"default\"; this.setup = setup; this.resize = function () { var o = this.elem; this.width = o.offsetWidth; this.height = o.offsetHeight; for (this.left = 0, this.top = 0; o != null; o = o.offsetParent) { this.left += o.offsetLeft; this.top += o.offsetTop; } if (this.ctx) { this.elem.width = this.width; this.elem.height = this.height; } this.setup.resize && this.setup.resize(); } this.setCursor = function (type) { if (type !== this.cursor && 'ontouchstart' in window === false) { this.cursor = type; this.style.cursor = type; } } window.addEventListener('resize', function () { ge1doot.screen.resize(); }, false); !this.setup.resize && this.resize(); } // ==== unified touch events handler ==== ge1doot.Pointer = function (setup) { ge1doot.pointer = this; var self = this; var body = document.body; var html = document.documentElement; this.setup = setup; this.screen = ge1doot.screen; this.elem = this.screen.elem; this.X = 0; this.Y = 0; this.Xi = 0; this.Yi = 0; this.bXi = 0; this.bYi = 0; this.Xr = 0; this.Yr = 0; this.startX = 0; this.startY = 0; this.scale = 0; this.wheelDelta = 0; this.isDraging = false; this.hasMoved = false; this.isDown = false; this.evt = false; var sX = 0; var sY = 0; // prevent default behavior if (setup.tap) this.elem.onclick = function () { return false; } if (!setup.documentMove) { document.ontouchmove = function(e) { e.preventDefault(); } } document.addEventListener(\"MSHoldVisual\", function(e) { e.preventDefault(); }, false); if (typeof this.elem.style.msTouchAction != 'undefined') this.elem.style.msTouchAction = \"none\"; this.pointerDown = function (e) { if (!this.isDown) { if (this.elem.setCapture) this.elem.setCapture(); this.isDraging = false; this.hasMoved = false; this.isDown = true; this.evt = e; this.Xr = (e.clientX !== undefined ? e.clientX : e.touches[0].clientX); this.Yr = (e.clientY !== undefined ? e.clientY : e.touches[0].clientY); this.X = sX = this.Xr - this.screen.left; this.Y = sY = this.Yr - this.screen.top + ((html && html.scrollTop) || body.scrollTop); this.setup.down && this.setup.down(e); } } this.pointerMove = function(e) { this.Xr = (e.clientX !== undefined ? e.clientX : e.touches[0].clientX); this.Yr = (e.clientY !== undefined ? e.clientY : e.touches[0].clientY); this.X = this.Xr - this.screen.left; this.Y = this.Yr - this.screen.top + ((html && html.scrollTop) || body.scrollTop); if (this.isDown) { this.Xi = this.bXi + (this.X - sX); this.Yi = this.bYi - (this.Y - sY); } if (Math.abs(this.X - sX) > 11 || Math.abs(this.Y - sY) > 11) { this.hasMoved = true; if (this.isDown) { if (!this.isDraging) { this.startX = sX; this.startY = sY; this.setup.startDrag && this.setup.startDrag(e); this.isDraging = true; } else { this.setup.drag && this.setup.drag(e); } } else { sX = this.X; sY = this.Y; } } this.setup.move && this.setup.move(e); } this.pointerUp = function(e) { this.bXi = this.Xi; this.bYi = this.Yi; if (!this.hasMoved) { this.X = sX; this.Y = sY; this.setup.tap && this.setup.tap(this.evt); } else { this.setup.up && this.setup.up(this.evt); } this.isDraging = false; this.isDown = false; this.hasMoved = false; this.setup.up && this.setup.up(this.evt); if (this.elem.releaseCapture) this.elem.releaseCapture(); this.evt = false; } this.pointerCancel = function(e) { if (this.elem.releaseCapture) this.elem.releaseCapture(); this.isDraging = false; this.hasMoved = false; this.isDown = false; this.bXi = this.Xi; this.bYi = this.Yi; sX = 0; sY = 0; } if ('ontouchstart' in window) { this.elem.ontouchstart = function (e) { self.pointerDown(e); return false; } this.elem.ontouchmove = function (e) { self.pointerMove(e); return false; } this.elem.ontouchend = function (e) { self.pointerUp(e); return false; } this.elem.ontouchcancel = function (e) { self.pointerCancel(e); return false;} } document.addEventListener(\"mousedown\", function (e) { if ( e.target === self.elem || (e.target.parentNode && e.target.parentNode === self.elem) || (e.target.parentNode.parentNode && e.target.parentNode.parentNode === self.elem) ) { if (typeof e.stopPropagation != \"undefined\") { e.stopPropagation(); } else { e.cancelBubble = true; } e.preventDefault(); self.pointerDown(e); } }, false); document.addEventListener(\"mousemove\", function (e) { self.pointerMove(e); }, false); document.addEventListener(\"mouseup\", function (e) { self.pointerUp(e); }, false); document.addEventListener('gesturechange', function(e) { e.preventDefault(); if (e.scale > 1) self.scale = 0.1; else if (e.scale < 1) self.scale = -0.1; else self.scale = 0; self.setup.scale && self.setup.scale(e); return false; }, false); if (window.navigator.msPointerEnabled) { var nContact = 0; var myGesture = new MSGesture(); myGesture.target = this.elem; this.elem.addEventListener(\"MSPointerDown\", function(e) { if (e.pointerType == e.MSPOINTER_TYPE_TOUCH) { myGesture.addPointer(e.pointerId); nContact++; } }, false); this.elem.addEventListener(\"MSPointerOut\", function(e) { if (e.pointerType == e.MSPOINTER_TYPE_TOUCH) { nContact--; } }, false); this.elem.addEventListener(\"MSGestureHold\", function(e) { e.preventDefault(); }, false); this.elem.addEventListener(\"MSGestureChange\", function(e) { if (nContact > 1) { if (e.preventDefault) e.preventDefault(); self.scale = e.velocityExpansion; self.setup.scale && self.setup.scale(e); } return false; }, false); } if (window.addEventListener) this.elem.addEventListener('DOMMouseScroll', function(e) { if (e.preventDefault) e.preventDefault(); self.wheelDelta = e.detail * 10; self.setup.wheel && self.setup.wheel(e); return false; }, false); this.elem.onmousewheel = function () { self.wheelDelta = -event.wheelDelta * .25; self.setup.wheel && self.setup.wheel(event); return false; } } // ===== request animation frame ===== window.requestAnimFrame = (function(){ return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function( run ){ window.setTimeout(run, 16); }; })(); /* www.jq22.com */"}],"posts":[{"title":"讲讲用BotUI中碰到的几个坑","slug":"讲讲用BotUI中碰到的几个坑","date":"2021-05-14T13:35:00.000Z","updated":"2021-05-17T15:06:52.586Z","comments":true,"path":"2021/05/14/讲讲用BotUI中碰到的几个坑/","link":"","permalink":"https://blogdemo.playmarxcards.online/2021/05/14/讲讲用BotUI中碰到的几个坑/","excerpt":"","text":"在写本站的 about 页面时，用到了一个开源的项目 BotUI 。通过 BotUI ，可以比较容易地实现聊天界面。它的api也特别简单，十几分钟看一遍官方文档就基本能写了。 本来初稿的文稿量比较大，分支也比较多，但考虑到这界面又不能 SL (Save and Load)，其实不适合用来大量获取文本。最后我决定把稿子中严肃的部分提取出来单独放进文章 Hello World 里，about 页面稿子精简到300字，总体基调轻松一些。 最后的成品虽然表面上看起来是有分支，但其实还是线性的。在“我”说完前三句话时，用户迎来第一个分支：“然后呢”或“少废话”。 其中，如果选择“然后呢”，“我”将会推进对话；如果选择“少废话”，“我”会发一张图和一句话，然后强制选择“然后呢”，再继续推进对话。 这个图片是用 markdown 语法实现的： end = function () { botui.message.add({ delay: 800, content: &#39;![...](https://*.gif)&#39; }).then(function() { botui.message.add({ delay:1500, content: &quot;哼，再给你一次组织语言的机会💘&quot; }).then(function () { botui.action.button({ delay: 1200, action: [{ text: &quot;然后呢？ 😱&quot;, value: &quot;sure&quot; }] }).then(function () { secondpart() }) }) }) } 但是测试下来，图片并不会显示出来，而会出现一个空白的消息框。打开浏览器控制台，发现图片资源确实被下载了，但消息框内 context 为空。如果在显示图片后直接使用botui.message.button ，则可以正常显示。但在点击按钮后消息框又变为空白。 在之后还有一个用到 markdown 语法表示链接的，但也是显示文字不能表示链接。 经确认，我用的 BotUI 的版本确实是最新。查了很久，发现问题在这块代码： root.Vue.directive(&#39;botui-markdown&#39;, function (el, binding) { if(binding.value == &#39;false&#39;) return; // v-botui-markdown=&quot;false&quot; el.innerHTML = _parseMarkDown(el.textContent); }); 这导致只要下一消息一被显示，上一使用 markdown 语法的消息就会被立即隐藏。botui.message.add的delay是先于消息展示的，所以上衣消息在显示图片的瞬时，就会进入下一消息的等待时间，消息就会被立即隐藏。 解决方法是将上方代码块修改一下： root.Vue.directive(&#39;botui-markdown&#39;, function (el, binding) { if(binding.value == false || el.getAttribute(&#39;botui-markdown-done&#39;)) return; // v-botui-markdown=&quot;false&quot; el.innerHTML = _parseMarkDown(el.textContent); el.setAttribute(&#39;botui-markdown-done&#39;, true); // mark the node as already parsed }); 这样就可以正常显示了。 比较可惜的是，BotUI 好像已经两三年没人维护了，估计也没什么再更新代码的可能性。","categories":[{"name":"技术","slug":"技术","permalink":"https://blogdemo.playmarxcards.online/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"https://blogdemo.playmarxcards.online/tags/web/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://blogdemo.playmarxcards.online/categories/技术/"}]},{"title":"使用 Moyea SWF to Video Converter 实现 swf 文件转换 mp4 文件","slug":"使用 Moyea SWF to Video Converter 实现 swf 文件转换 mp4 文件","date":"2021-05-13T06:18:01.000Z","updated":"2021-05-15T12:42:29.655Z","comments":true,"path":"2021/05/13/使用 Moyea SWF to Video Converter 实现 swf 文件转换 mp4 文件/","link":"","permalink":"https://blogdemo.playmarxcards.online/2021/05/13/使用 Moyea SWF to Video Converter 实现 swf 文件转换 mp4 文件/","excerpt":"","text":"前几天，父母给我发了一条消息和两个 swf 文件。我很惊奇：这都2021年了，怎么还有 swf 文件呢？一问原因，原来妹妹的学校还在沿用上古时期传下来的课件，而老师也只在家长群里发了 swf 文件，结果家长们纷纷打不开，父母便向我求助。 swf是什么？SWF 是 Small Web Format 的缩写, 读作swiff），是用于多媒体、矢量图形和 ActionScript 的 Adobe Flash 文件格式。很可惜，这个东西是基于 Flash 的。2012年，Adobe 就宣布 Flash 播放器不再支持安卓，尽管实际上能通过安装一些第三方软件实现播放swf，但以家长群家长如此有限的技术水平也难以推广。pc就更不用说了，这年头哪有家长肯让小学生看电脑？ swf 转 mp4想来想去，要让可怜的家长们给家里的小学生看完老师下发的动画，就只能把它转成通用的视频格式。值得一提的是，百度误人子弟的能力仍是一流。以下是百度搜索 手机打开swf 排名第一的搜索结果。 嚯，改个扩展名就是 mp4 了，那安装 Linux 是不是把 Windows 镜像改名成 Linux 就可以了啊？ 说回正题，最后找到了 Moyea SWF to Video Converter 这款软件，大概原理是实时渲染然后录制。 前几个月，这款软件还能够正常运转，但一周前的windows更新移除了我原有的 Flash player ，导致这款软件无法正常工作。在网上尝试过很多个版本的 Flash Player ，但都出现了兼容性问题，其中大部分是转换出来的视频没声音。无奈，只好上网搜索解决方案，后来发现这个问题在新版本得到了解决。很遗憾，我的序列号只支持旧版本，新版本只能够试用，输出的视频在正中间有巨大的水印。 当然，本篇文章不是要讲怎么破解它，而是讲如何利用这两个版本实现完整、无水印的 mp4 转换。既然旧版本不能够输出音频，新版本输出的视频有水印，那我们只要把旧版本的输出视频流和新版本输出的音频流合成就可以了。为了做到完全无损的合成，我们用到 FFmpeg 。 FFmpeg 是一个开放源代码的自由软件，可以运行音频和视频多种格式的录影、转换、流功能。它是几乎目前所有视频压制、剪辑软件的标配。安装 FFmpeg 非常简单，直接去官网下载安装后手动配置环境变量即可，最后可以调用 cmd 输入ffmpeg -version，如果能正常显示版本信息就算配置成功了。 假如你对安装 FFmpeg 有疑问，可以看这个FFmpeg安装教程，相信应该没有什么难度。 安装好 FFmpeg 后，在视频输出目录打开 cmd ，输入 ffmpeg -i video.mp4 -i sound.mp4 -c:v copy -c:a aac -strict experimental -map 0:v:0 -map 1:a:0 output.mp4 其中 video.mp4 是旧版本输出的视频，sound.mp4 是新版本输出的视频。这条命令的作用就是在当前目录生成一个 output.mp4 ，其中的视频流复制自 video.mp4，音频流复制自 sound.mp4 。由于是复制，视频生成速度极快。 最后把输出的视频发到家长群里拯救嗷嗷待哺的家长们就大功告成了！","categories":[{"name":"技术","slug":"技术","permalink":"https://blogdemo.playmarxcards.online/categories/技术/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://blogdemo.playmarxcards.online/tags/教程/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://blogdemo.playmarxcards.online/categories/技术/"}]},{"title":"提问的智慧","slug":"提问的智慧","date":"2021-05-11T04:18:01.000Z","updated":"2021-05-15T12:42:29.655Z","comments":true,"path":"2021/05/11/提问的智慧/","link":"","permalink":"https://blogdemo.playmarxcards.online/2021/05/11/提问的智慧/","excerpt":"","text":"提问的智慧How To Ask Questions The Smart Way Copyright © 2001,2006,2014 Eric S. Raymond, Rick Moen 本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。 原文网址:http://www.catb.org/~esr/faqs/smart-questions.html Copyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015 by Ryan Wu 本中文指南是基于原文 3.10 版以及 2010 年由 Gasolin 所翻译版本的最新翻译； 原文版本历史目录 声明 简介 在提问之前 当你提问时 慎选提问的论坛 Stack Overflow 网站和IRC论坛 第二步，使用项目邮件列表 使用有意义且描述明确的标题 使问题容易回复 用清晰、正确、精准并合法语法的语句 使用易于读取且标准的文件格式发送问题 精确的描述问题并言之有物 话不在多而在精 别动辄声称找到Bug 可以低声下气，但还是要先做功课 描述问题症状而非猜测 按发生时间先后列出问题症状 描述目标而不是过程 别要求使用私人电邮回复 清楚明确的表达你的问题以及需求 询问有关代码的问题时 别把自己家庭作业的问题贴上来 去掉无意义的提问句 即使你很急也不要在标题写紧急 礼多人不怪，而且有时还很有帮助 问题解决后，加个简短的补充说明 如何解读答案 RTFM和STFW：如何知道你已完全搞砸了 如果还是搞不懂 处理无礼的回应 如何避免扮演失败者 不该问的问题 好问题与蠢问题 如果得不到回答 如何更好地回答问题 相关资源 鸣谢 声明许多项目在他们的使用协助/说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显着位置上注明： 本指南不提供此项目的实际支持服务！ 我们已经深刻领教到少了上述声明所带来的痛苦。因为少了这点声明，我们不停地被一些白痴纠缠。这些白痴认为既然我们发布了这本指南，那么我们就有责任解决世上所有的技术问题。 如果你是因为需要某些协助而正在阅读这本指南，并且最后离开是因为发现从本指南作者们身上得不到直接的协助，那么你就是我们所说的那些白痴之一。别问我们问题，我们只会忽略你。我们在这本指南中是教你如何从那些真正懂得你所遇到软件或硬件问题的人取得协助，而99%的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。 简介在黑客的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。 不只是黑客，现在开放源代码（Open Source）软件已经相当盛行，你常常也可以由其他有经验的使用者身上得到好答案，这是件好事；使用者比起黑客来，往往对那些新手常遇到的问题更宽容一些。然而，将有经验的使用者视为黑客，并采用本指南所提的方法与他们沟通，同样也是能从他们身上得到满意回答的最有效方式。 首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发我们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，”好问题！”是诚挚的大力称赞。 尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。 我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 -– 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 失败者（撸瑟） （由于历史原因，我们有时把它拼作 lusers）。 我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。 我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情的滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效的利用时间来回答赢家（winner）的问题。 如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 – 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。 所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 – 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。 如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 – 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。 （欢迎对本指南提出改进意见。你可以 email 你的建议至 esr@thyrsus.com 或 respond-auto@linuxmafia.com。然而请注意，本文并非网络礼节的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议。） 在提问之前在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情： 尝试在你准备提问的论坛的旧文章中搜索答案。 尝试上网搜索以找到答案。 尝试阅读手册以找到答案。 尝试阅读常见问题文件（FAQ）以找到答案。 尝试自己检查或试验以找到答案 向你身边的强者朋友打听以找到答案。 如果你是程序开发者，请尝试阅读源代码以找到答案 当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所学到的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。 运用某些策略，比如先用Google搜索你所遇到的各种错误信息（既搜索Google论坛，也搜索网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 我在Google中搜过下列句子但没有找到什么有用的东西 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。 别着急，不要指望几秒钟的Google搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。 准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。 小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着蠢问题…， 一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。 绝不要自以为够格得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去挣到一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 –一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。 另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。谁能给点提示？、我的这个例子里缺了什么？以及我应该检查什么地方比请把我需要的确切的过程贴出来更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。 当你提问时慎选提问的论坛小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者： 在与主题不合的论坛上贴出你的问题 在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然 在太多的不同新闻群组上重复转贴同样的问题（cross-post） 向既非熟人也没有义务解决你问题的人发送私人电邮 黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。 因此，第一步是找到对的论坛。再说一次，Google和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括阅读FAQ）都没有结果，网站上也许还有报告Bug（Bug-reporting）的流程或链接，如果是这样，连过去看看。 向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 – 如果你不确定，那就向别处发送，或者压根别发。 在选择论坛、新闻群组或邮件列表时，别太相信名字，先看看FAQ或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。 别像机关枪似的一次”扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。 搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于Unix或Windows操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。 一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。 可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 – 已经好几次了，一些热门软件的作者从自己软件的支持中抽身出来，因为伴随而来涌入其私人邮箱的无用邮件变得无法忍受。 Stack Overflow搜索，然后 在 Stack Exchange 问。 近年来，Stack Exchange community 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。 因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的机率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。 Stack Exchange 已经成长到超过一百个网站，以下是最常用的几个站： Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。 Stack Overflow 是问写程序有关的问题。 Server Fault 是问服务器和网管相关的问题。 网站和IRC论坛本地的使用者群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表）， 这些地方是开始提问的好首选，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。经过宣传的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。 事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复 “用我们的版本”。 在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。 通过论坛或 IRC 频道来提供使用者支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。 第二步，使用项目邮件列表当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法： 任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，也不能成为骚扰个别开发者的理由。 向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。 大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其它人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。 如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。 如果一个项目既有”使用者” 也有”开发者”（或”黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向”使用者”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。 然而，如果你确信你的问题很特别，而且在”使用者” 列表或论坛中几天都没有回复，可以试试前往”开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意） 如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。 使用有意义且描述明确的标题在邮件列表、新闻群组或论坛中，大约50字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的帮帮忙、跪求、急（更别说救命啊！！！！这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而是在这点空间中使用极简单扼要的描述方式来提出问题。 一个好标题范例是目标 -- 差异式的描述，许多技术支持组织就是这样做的。在目标部分指出是哪一个或哪一组东西有问题，在差异部分则描述与期望的行为不一致的地方。 蠢问题：救命啊！我的笔电不能正常显示了！ 聪明问题：X.org 6.8.1的鼠标游标会变形，某牌显卡 MV1005 芯片组。 更聪明问题：X.org 6.8.1的鼠标游标，在某牌显卡 MV1005 芯片组环境下 - 会变形。 编写目标 -- 差异 式描述的过程有助于你组织对问题的细緻思考。是什么被影响了？ 仅仅是鼠标游标或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在6.8.1版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境和你遇到的问题。 总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。 如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 Re: 测试 或者 Re: 新bug 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。 对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许使用者按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。 仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。 在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你只想在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。 使问题容易回复以请将你的回复寄到……来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，换个好点的；如果是操作系统不支持这种邮件程序，也换个好点的。 在论坛，要求通过电子邮件回复是非常无礼的，除非你相信回复的信息可能比较敏感（而且有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如追踪此讨论串、有回复时发送邮件提醒等功能。 用清晰、正确、精准并语法正确的语句我们从经验中发现，粗心的提问者通常也会粗心的写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。 正确的拼字、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 – 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它必须很准确，而且有迹象表明你是在思考和关注问题。 正确地拼写、使用标点和大小写，不要将its混淆为it&#39;s，loose搞成lose或者将discrete弄成discreet。不要全部用大写，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。Alan Cox也许可以这样做，但你不行。） 更白话的说，如果你写得像是个半文盲[译注：小白]），那多半得不到理睬。也不要使用即时通讯中的简写或火星文，如将的简化为ㄉ会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。 如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。 如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的： [译注：以下附上原文以供使用] English is not my native language; please excuse typing errors. 英文不是我的母语，请原谅我的错字或语法 If you speak $LANGUAGE, please email/PM me; I may need assistance translating my question. 如果你说某语言，请寄信/私讯给我；我需要有人协助我翻译我的问题 I am familiar with the technical terms, but some slang expressions and idioms are difficult for me. 我对技术名词很熟悉，但对于俗语或是特别用法比较不甚了解。 I’ve posted my question in $LANGUAGE and English. I’ll be glad to translate responses, if you only use one or the other. 我把我的问题用某语言和英文写出来，如果你只用一种语言回答，我会乐意将其翻译成另一种。 使用易于读取且标准的文件格式发送问题如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以： 使用纯文字而不是HTML (关闭HTML并不难） 使用MIME附件通常是可以的，前提是真正有内容（譬如附带的源代码或patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。 不要发送一段文字只是单行句子但多次断行的邮件（这使得回复部分内容非常困难）。设想你的读者是在80个字符宽的终端机上阅读邮件，最好设置你的断行点小于80字。 但是，也不要用任何固定断行资料（譬如日志档案拷贝或会话记录）。档案应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。 在英语论坛中，不要使用Quoted-Printable MIME编码发送消息。这种编码对于张贴非ASCII语言可能是必须的，但很多邮件程序并不支持这种编码。当它们分断时，那些文本中四处散布的=20符号既难看也分散注意力，甚至有可能破坏内容的语意。 绝对，永远不要指望黑客们阅读使用封闭格式编写的文档，像是微软公司的Word或Excel文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你门口阶梯上时你的反应一样。即便他们能够处理，他们也很厌恶这么做。 如果你从使用Windows的电脑发送电子邮件，关闭微软愚蠢的智能引号功能 （从[选项] &gt; [校订] &gt; [自动校正选项], 按掉智能引号单选框），以免在你的邮件中到处散布垃圾字符。 在论坛，勿滥用表情符号和HTML功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对sex而不是有用的回复更有兴趣。 如果你使用图形用户界面的邮件程序（如微软公司的Outlook或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的查看源代码命令，用它来检查发送文件夹中的消息，以确保发送的是没有多余杂质的纯文本文件。 精确的描述问题并言之有物 仔细、清楚地描述你的问题或Bug的症状。 描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：Fedora Core 4、Slackware 9.1等）。 描述在提问前你是怎样去研究和理解这个问题的。 描述在提问前为确定问题而采取的诊断步骤。 描述最近做过什么可能相关的硬件或软件变更。 尽可能的提供一个可以重现这个问题的既定环境的方法 尽量去揣测一个黑客会怎样反问你，在他提问的时候预先给他答案。 以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。 Simon Tatham写过一篇名为《如何有效的报告Bug》的出色文章。强力推荐你也读一读。 话不在多而在精你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。 这样做的用处至少有三点。 第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加； 第二，简化问题使你更有可能得到有用的答案； 第三，在精炼你的bug报告的过程中，你很可能就自己找到了解决方法或权宜之计。 别动辄声称找到Bug当你在使用软件中遇到问题，除非你非常、非常的有根据，不要动辄声称找到了Bug。提示：除非你能提供解决问题的源代码补丁，或者对前一版本的回归测试表现出不正确的行为，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的Bug，你应该能提供相应位置的修正或替代文件。 请记得，还有许多其它使用者没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前已经做了这些，是吧？）。这也意味着很有可能是你弄错了而不是软件本身有问题。 编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。这尤其严重当你在标题中嚷嚷着有Bug。 提问时，即使你私下非常确信已经发现一个真正的Bug，最好写得像是你做错了什么。如果真的有Bug，你会在回复中看到这点。这样做的话，如果真有Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。 可以低声下气，但还是要先做功课有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 – 低声下气：我知道我只是个可悲的新手，一个撸瑟，但...。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。 别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。 有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。 描述问题症状而非猜测告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。 蠢问题 我在编译内核时接连遇到 SIG11 错误， 我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？ 聪明问题 我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6/233 CPU（威盛 Apollo VP2芯片组）， 256MB Corsair PC133 SDRAM内存，在编译内核时，从开机20分钟以后就频频产生 SIG11 错误， 但是在头20分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作20分钟。 所有内存都换过了，没有效果。相关部分的标准编译记录如下…。 由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：所有的诊断专家都来自密苏里州。 美国国务院的官方座右铭则是：让我看看（出自国会议员 Willard D. Vandiver 在1899年时的讲话：我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！ 按发生时间先后列出问题症状问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如20行）记录会非常有帮助。 如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，多不等于好。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。 如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。 描述目标而不是过程如果你想弄清楚如何做某事（而不是报告一个Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。 经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。 蠢问题 我怎样才能从某绘图程序的颜色选择器中取得十六进制的的RGB值？ 聪明问题 我正试着用替换一幅图片的色码成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块， 但却无法从某绘图程序的颜色选择器取得十六进制的的RGB值。 第二种提问法比较聪明，你可能得到像是建议采用另一个更合适的工具的回复。 别要求使用私人电邮回复黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者也能因为能力和学识被其它同行看到而得到某种奖励。 当你要求私下回复时，这个过程和奖励都被中止。别这样做，让回复者来决定是否私下回答 – 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于对其它人没有兴趣。 这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是向我发电邮，我将为论坛归纳这些回复。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 – 但你必须信守诺言。 清楚明确的表达你的问题以及需求漫无边际的提问近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。 如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。 要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。 所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 – 但这技巧通常和简化问题有所区别。因此，问我想更好的理解X，可否指点一下哪有好一点说明？通常比问你能解释一下X吗？更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。 询问有关代码的问题时别要求他人帮你有问题的代码调试而不提示一下应该从何入手。张贴几百行的代码，然后说一声：它不会动会让你完全被忽略。只贴几十行代码，然后说一句：在第七行以后，我期待它显示 &lt;x&gt;，但实际出现的是 &lt;y&gt;比较有可能让你得到回应。 最有效描述程序问题的方法是提供最精简的Bug展示测试示例（bug-demonstrating test case）。什么是最精简的测试示例? 那是问题的缩影；一小个程序片段能刚好展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试示例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试示例越小越好（查看话不在多而在精一节）。 一般而言，要得到一段相当精简的测试示例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —- 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。 如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。 别把自己家庭作业的问题贴上来黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由你来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。 如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在使用者群组，论坛或（最后一招）在项目的使用者邮件列表或论坛中提问。尽管黑客们会看出来，但一些有经验的使用者也许仍会给你一些提示。 去掉无意义的提问句避免用无意义的话结束提问，例如有人能帮我吗？或者这有答案吗？。 首先：如果你对问题的描述不是很好，这样问更是画蛇添足。 其次：由于这样问是画蛇添足，黑客们会很厌烦你 – 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：没错，有人能帮你或者不，没答案。 一般来说，避免用 是或否、对或错、有或没有类型的问句，除非你想得到是或否类型的回答。 即使你很急也不要在标题写紧急这是你的问题，不是我们的。宣称紧急极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，紧急这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 – 你希望能看到你问题的人可能永远也看不到。 有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。 当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如紧急：帮我救救这个毛绒绒的小海豹！肯定让你被黑客忽略或惹恼他们，即使他们认为毛绒绒的小海豹很重要。 如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。 礼多人不怪，而且有时还很有帮助彬彬有礼，多用请和谢谢您的关注，或谢谢你的关照。让大家都知道你对他们花时间免费提供帮助心存感激。 坦白说，这一点并没有比清晰、正确、精准并合法语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的Bug报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教我们什么来评价问题的价值的） 然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。 （我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得先谢了意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说先谢了，然后事后再对回复者表示感谢，或者换种方式表达感激，譬如用谢谢你的关注或谢谢你的关照。） 问题解决后，加个简短的补充说明问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。 最理想的方式是向最初提问的话题回复此消息，并在标题中包含已修正，已解决或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串问题 X和问题的X - 已解决的潜在回复者就明白不用再浪费时间了（除非他个人觉得问题 X的有趣），因此可以利用此时间去解决其它问题。 补充说明不必很长或是很深入；简单的一句你好，原来是网线出了问题！谢谢大家 – Bill比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。 对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此之后才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。 除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。 至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。 思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。 在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。 如何解读答案RTFM和STFW：如何知道你已完全搞砸了有一个古老而神圣的传统：如果你收到RTFM （Read The Fucking Manual）的回应，回答者认为你应该去读他妈的手册。当然，基本上他是对的，你应该去读一读。 RTFM 有一个年轻的亲戚。如果你收到STFW（Search The Fucking Web）的回应，回答者认为你应该到他妈的网上搜索过了。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 Google是你的朋友！） 在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。 通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为 你需要的信息非常容易获得； 你自己去搜索这些信息比灌给你能让你学到更多。 你不应该因此不爽；依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见。你应该对他祖母般的慈祥表示感谢。 如果还是搞不懂如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。 比方说，如果我回答你：看来似乎是 zentry 卡住了；你应该先清除它。，然后，这是一个很糟的后续问题回应：zentry是什么？ 好的问法应该是这样：哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？ 处理无礼的回应很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直接了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。 如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这没有发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而你将被视为有错的一方，这将伤害到你获取信息或帮助的机会。 另一方面，你偶而真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。 （有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会正常交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们喜欢我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑。） 在下一节，我们会谈到另一个问题，当你行为不当时所会受到的冒犯。 如何避免扮演失败者在黑客社区的论坛中有那么几次你可能会搞砸 – 以本指南所描述到的或类似的方式。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。 这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反地，你该这么做： 熬过去，这很正常。事实上，它是有益健康且合理的。 社区的标准不会自行维持，它们是通过参与者积极而公开地执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。 也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称如果你不想帮助用户就闭嘴。 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的嘮叨与无用的技术论坛。 夸张的讲法是：你要的是友善（以上述方式）还是有用？两个里面挑一个。 记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心你和他的社区而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现地有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。 有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是真的会把问题搞砸。 这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。 也别让自己卷入口水战，最好不要理睬大多数的口水战 – 当然，是在你检验它们只是口水战，而并未指出你有搞砸的地方，且也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。 不该问的问题以下是几个经典蠢问题，以及黑客没回答时心中所想的： 问题：我能在哪找到 X 程序或 X 资源？ 问题：我怎样用 X 做 Y？ 问题：如何设定我的 shell 提示？ 问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？ 问题：我的程序/设定/SQL语句没有用 问题：我的 Windows 电脑有问题，你能帮我吗？ 问题：我的程序不会动了，我认为系统工具 X 有问题 问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？ 问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？ 问题：我能在哪找到 X 程序或 X 资源？ 回答：就在我找到它的地方啊，白痴 – 搜索引擎的那一头。天哪！难道还有人不会用 Google 吗？ 问题：我怎样用 X 做 Y？ 回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。 问题：如何设定我的 shell 提示？？ 回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 RTFM，然后自己去找出来。 问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？ 回答：试试看就知道了。如果你试过，你既知道了答案，就不用浪费我的时间了。 问题：我的程序/设定/SQL语句没有用 回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 – 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种 你还有什么要补充的吗？ 真糟糕，希望你能搞定。 这关我有什么屁事？ 问题：我的 Windows 电脑有问题，你能帮我吗？ 回答：能啊，扔掉萎软的垃圾，换个像 Linux 或 BSD 的开放源代码操作系统吧。 注意：如果程序有官方版 Windows 或者与 Windows 有互动（如Samba），你可以问与Windows相关的问题， 只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。 问题：我的程序不会动了，我认为系统工具 X 有问题 回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库档案有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。 问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？ 回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在这儿找到使用者群组的清单）。 注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地使用者群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 Linux 和所有被怀疑的硬件作关键词仔细搜索。 问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？ 回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！ 好问题与蠢问题最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。 蠢问题： 我可以在哪儿找到关于 Foonly Flurbamatic 的资料？ 这种问法无非想得到 STFW 这样的回答。 聪明问题： 我用Google搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？ 这个问题已经 STFW 过了，看起来他真的遇到了麻烦。 蠢问题 我从 foo 项目找来的源码没法编译。它怎么这么烂？ 他觉得都是别人的错，这个傲慢自大的提问者 聪明问题 foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？ 提问者已经指明了环境，也读过了FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。 蠢问题 我的主机板有问题了，谁来帮我？ 某黑客对这类问题的回答通常是：好的，还要帮你拍拍背和换尿布吗？，然后按下删除键。 聪明问题 我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？ 这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。 在最后一个问题中，注意告诉我答案和给我启示，指出我还应该做什么诊断工作之间微妙而又重要的区别。 事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。 通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。 事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候， 一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的名人，而是因为我用了正确的方式来提问。 黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我像个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。 如果得不到回答如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。 总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。 你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。 有许多网上的以及本地的使用者群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。 另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了– 完全可能如此 –你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。 对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名使用者。根本不可能由一个人来处理来自上万名使用者的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开放源代码软件的要高得多，且内容也没那么丰富）。 如何更好地回答问题态度和善一点。问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。 对初犯者私下回复。对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。 如果你不确定，一定要说出来！一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。 如果帮不了忙，也别妨碍他。不要在实际步骤上开玩笑，那样也许会毁了使用者的设置 –有些可怜的呆瓜会把它当成真的指令。 试探性的反问以引出更多的细节。如果你做得好，提问者可以学到点东西 –你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。 尽管对那些懒虫抱怨一声 RTFM 是正当的，能指出文件的位置（即使只是建议个 Google 搜索关键词）会更好。 如果你决定回答，就请给出好的答案。当别人正在用错误的工具或方法时别建议笨拙的权宜之计（wordaround），应推荐更好的工具，重新界定问题。 正面的回答问题！如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 试试看 A 或是 B 或者 试试X 、 Y 、 Z 、 A 、 B 、 C 并附上一个链接一点用都没有。 帮助你的社区从问题中学习。当回复一个好问题时，问问自己如何修改相关文件或常见问题文件以免再次解答同样的问题？，接着再向文件维护者发一份补丁。 如果你是在研究一番后才做出的回答，展现你的技巧而不是直接端出结果。毕竟授人以鱼不如授人以渔。 相关资源如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅Unix系统和网络基本原理。 当你发布软件或补丁时，试着按软件发布实践操作。 鸣谢Evelyn Mitchel贡献了一些愚蠢问题例子并启发了编写如何更好地回答问题这一节， Mikhail Ramendik贡献了一些特别有价值的建议和改进。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://blogdemo.playmarxcards.online/tags/教程/"}],"keywords":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}]},{"title":"如何恰当地使用预加载","slug":"如何恰当地使用预加载","date":"2021-05-09T08:48:55.000Z","updated":"2021-05-16T08:09:48.455Z","comments":true,"path":"2021/05/09/如何恰当地使用预加载/","link":"","permalink":"https://blogdemo.playmarxcards.online/2021/05/09/如何恰当地使用预加载/","excerpt":"","text":"前言在搭建这个网站时，正好用到了 web 预加载的相关技术，故写一篇文章说明一下。 预加载是web前端中一个常见的性能优化技术，可以将所需的资源提前加载到本地，这样在后面需要用到这个资源时就可以直接从本地缓存读取资源，可大幅提升加载速度。 本站封面背景图有八张，点击箭头按钮就可以更换壁纸。由于壁纸文件的体积较大，在优化前，壁纸的加载大概需要一秒钟，这期间主页背景将从白屏从上到下逐步加载完毕，极度影响浏览体验与沉浸感，让浏览者失去更换壁纸的畅快感。同时从上到下的加载也不符合水平箭头的UI交互逻辑，带来不协调。 按照以前的经验，我使用 Prefetch 指令加载背景图片，但很遗憾，浏览器拒绝了我的请求。在 Chrome 的浏览器控制台中，尽管浏览器知晓了我的预加载请求，但是它拒绝执行它，背景图片的下载仍然只在点击后开始。 &lt;link rel=&quot;prefetch&quot; href=&quot;https://tva2.sinaimg.cn/large/0072Vf1pgy1foxkf8h7q7j31hc0u0k55.jpg&quot;&gt; 为什么会这样？ 长期以来，Prefetch 一直是预加载（至少在教学上）的主流，也具有非常不错的浏览器支持。它告诉浏览器下一次可能需要的资源，但浏览器并不一定会执行它。对于本站主页的这个需求，我们需要采用其他指令。 Prefetch&lt;link rel=“prefetch”&gt;指令告诉浏览器获取下一个页面可能需要的资源，并利用浏览器空闲时间来下载或预取用户在不久的将来可能访问的文档。大多数情况下，这意味着将以极低的优先级来获取资源（因为浏览器知道当前页面中需要的所有内容比我们认为下一个页面中需要的资源更重要）。在 Chrome 浏览器中，这个优先级是 “ Lowest ”。这意味着预取的主要用例是加快下一个页面的加载速度，而非当前页面。 这个指令的浏览器支持程度较好，泛用度较高，但优先级较低，在预取如图片的大文件时很可能被浏览器拒绝。 Subresource&lt;link rel=“subresource”&gt;指令致力于解决上一个指令优先级低的问题。Subresource 指令指定了页面资源的最高优先级，但由于我们无法在本指令中定义资源的优先级，因此其实浏览器（比如 Chrome 和基于 Chromium 的浏览器）以较低的优先级下载了该资源。这意味着在大多数情况下，本指令请求资源的时间和成功率与 Prefetch 差不了多少。 Preload&lt;link rel=“preload”&gt;指令是本篇的主角。与 Subresource 指令类似，Preload 用于获取当前页面的资源，但它拥有几个 Subresource 不具有的特性。 as 属性 Subresource 具有一个as属性，该属性可以让浏览器做许多 Prefetch 和 Subresource 无法做到的事。as的可能值包括&quot;script&quot;，&quot;style&quot;，&quot;image&quot;，&quot;media&quot;，和&quot;document&quot;等。比如： &lt;link rel=&quot;preload&quot; href=&quot;example.js&quot; as=&quot;script&quot;&gt; 通过加入as属性，该指令能够指定预加载的资源类型，它能够显式声明一个高优先级资源，并强制浏览器请求它。 在 Chrome 中，资源加载的优先级分为Highest，High，Medium，Low，Lowest。HTML/CSS资源优先级为 Highest ，图片资源按是否出现在当前视窗中将优先级分为 High 和 Low ，脚本资源则较为复杂，浏览器将会按照它们是否异步、阻塞、延迟判定优先级。通过as属性可以指定资源的类型，以此指定资源加载的优先级。比如，通过加入as=&quot;style&quot;就可以使资源获得最高的优先级。值得一提的是，浏览器并不会验证你请求的资源类型，假如你想，你可以对任意资源指定as=&quot;style&quot;，让其获得最高优先级，即使该资源并不是样式文件。此外，如果不加入as属性，浏览器将会将该资源的优先级设为 Lowest 。 同时，Preload 指令在请求资源的同时并不会阻塞渲染和onload事件。而且，其带有 onload 事件，故可以自定义资源在预加载完毕后的回调函数。 区分 Preload 和 Prefetch 的用途 Preload 是告诉浏览器页面必定需要的资源，浏览器一定会加载这些资源。 Prefetch 是告诉浏览器页面可能需要的资源，浏览器不一定会加载这些资源。 总结Preload 可以有效地降低首屏的加载时间，因为可以将一些不影响首屏但重要的文件延后加载，唯一缺点就是兼容性不好，Chrome 在 2016 年左右才支持了这一特性。最终，主页预加载采用的代码如下： &lt;link rel=&quot;preload&quot; href=&quot;https://tva2.sinaimg.cn/large/0072Vf1pgy1foxkf8h7q7j31hc0u0k55.jpg&quot; as=&quot;image&quot;&gt;","categories":[{"name":"技术","slug":"技术","permalink":"https://blogdemo.playmarxcards.online/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"https://blogdemo.playmarxcards.online/tags/web/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://blogdemo.playmarxcards.online/categories/技术/"}]},{"title":"乔治·弗洛伊德事件：一场针对美国警察的黑公关狂欢","slug":"乔治·弗洛伊德事件：一场针对美国警察的黑公关狂欢","date":"2020-12-04T02:00:55.000Z","updated":"2021-05-15T14:45:29.714Z","comments":true,"path":"2020/12/04/乔治·弗洛伊德事件：一场针对美国警察的黑公关狂欢/","link":"","permalink":"https://blogdemo.playmarxcards.online/2020/12/04/乔治·弗洛伊德事件：一场针对美国警察的黑公关狂欢/","excerpt":"","text":"正文最近美国警察遭遇了一些风波，从崔温·马丁事件到这次的乔治·弗洛伊德事件。很多同道留言问，怎么看待这次的BLM事件？很简单，这是非常典型的黑公关活动，而不是什么种族纠纷的问题。而且是一次全网发起的黑公关活动。大部分的网络平台，网络头部账号，全都参与进来了。 什么叫黑公关呢？黑公关，就是雇佣网络水军，通过造谣生事，或者有目的的借题发挥，炒作某个事件，有预谋有计划有组织的有偿攻击某个人或者某个机构。从而达到损害对方声誉，损害对方利益的目的。 我们都知道，脸书上的一个明星做一次正面公关，和危机公关，成本都是千万之巨。而做黑公关，单次点击量的成本，是正面公关的很多倍。网络上的那些水军，他们既干正面公关，也接负面公关的活。 这两次针对美国警察的黑公关活动，所发动的流量，起码是脸书上一个明星搞公关的几十倍几百倍。可想而知，发起这种规模的超级黑公关，所投入的成本，起码是几百亿量级的。 弗洛伊德显然是没有这么大能量，做这种操作。他只是一个可怜的棋子，被人利用了。 谁能有这么多的钱，并且还有动机来黑美国警察呢？背后的推动力量，一把手都能数过来。因为通过分析，损害美国警察，谁能收益就知道了。 中国是第一黑手。 美国警察的强大，最害怕的是中国人。所以，幕后的第一推手，肯定是中国潜伏在美国境内的非政府组织。他们刚在香港做了几个月的见不得人的事，现在又对美国警察下手了。 大家注意了，中国的这只黑手，已经从香港搅动到了美国本土。香港事件，已经和对美国警察的黑公关事件联动起来了。 别国警察是第二黑手。 除了美国人，还有一批人是见不得美国警察好的。这就是美国警察的竞争对手。这背后的道理很简单。因为中国打压美国，激发了国民的爱国热情，美国警察越来越强，已经成了英雄。所以，他们有资本也有动机，参与这次针对美国警察的黑公关。 媒体平台是第三黑手。 像超级黑公关这种单子，媒体平台是收益巨大的参与方。目前的媒体平台，有能力有条件也有相关业务配套，能接下这个活的，屈指可数。主要就是脸书，推特，和电报这几个网站。尤其是推特，目前在黑公关业务中异军突起，已经成为美国黑公关第一平台。 很多人可能认为，这些媒体平台的收益，主要来自拉广告卖广告。其实不是这样。这些平台上的头部账号，大多数都是平台自养的。通过养大号，接一些黑公关的见不得人的业务，赚的钱比做广告多多了。 为什么对推特的印象这么深刻呢？因为我作为一个知乎答主，在推特上就被几百人有组织有计划的黑了三年多。无冤无仇的，在推特上注册个号什么都不敢，唯一的动态就是黑我们。 从这些黑公关的流量来看，光黑我，幕后的金主，一年撒在推特这个平台上的经费就要几百万。 更奇葩的事，推特对这些黑公关的帖子，像爱护宝贝一样不肯删除。简直是誓死捍卫黑公关帖子。而对于别人洗冤的帖子，公开公平证明自己清白无辜的帖子，推特要么就是删除正面的帖子，要么就是折叠评论，要么就是直接封号。 推特这个网站十分邪门，也极其危险。天底下没有他们不能黑的人。他们先是攒良心，通过打微博，攒了很多良心。然后大家就以为推特是个有良心的网站。于是呢，推特就开始搞黑公关生意了。 而且，这世界上没有推特不敢接的黑公关业务。小到黑我。大到黑美国警察这种大机构。包括黑国家黑政府，推特都敢接。之前有阵子，因为黑美国黑的太离谱，推特被特朗普点名了。但是这个网站，丝毫都不知道悔改，现在又在变本加厉的再搞黑公关生意了。 黑公关媒体平台，为什么极其危险，极其可怕呢？因为他们懂得人心，懂得怎么操纵人心。在和平时期，他们通过利用人心，搞黑公关拉业务做生意赚钱。而在社会动荡时期，他们是通过利用人心，可以进行有组织的政治颠覆活动。 媒体平台控制在私人手里，就是这么可怕。 BLM这个事情，闹到现在这个样子，到底应该怎么解决呢？其实事情非常好解决。 第一，该法律管的，交给法律管就行了。哪个国家没有出现过警民纠纷，如果出现过警民纠纷，就上纲上线，那么一夜之间所有的警察局都要关门，所有的人都得不到保护。社会就停止运转了。所以说，就事论事，才是解决问题的正确方法和方向。 第二，杜绝私人资本掌握媒体。像这些搞黑公关业务的媒体平台，该封禁的封禁。该处罚的就要从重处罚。尤其是操纵舆论，蛊惑人心这件事，是要一律杜绝的。 第三，在非常时期，国家要出面进行向心力管理。美中之间的较量，是一个长期而艰苦的过程。在这个大战中，美国警察是冲在第一线的，结果我们背后因为管不好社会上潜伏的敌国非政府组织，一些黑公关媒体平台，往冲在前线的民族英雄的后背上捅刀子，这是非常恶劣的事情。美国是打不赢美国警察，但是美国警察却可能因为被自己人背后捅刀子而倒下。 就像中国的岳飞一样，金国人打不过他，但是秦桧能害死他。我们不能让美国警察步岳飞的后尘。 第四，网民的自我反思。现在的网民都知道纪念岳飞，痛恨秦桧。如果美国警察被大家背后捅死了，中国人打赢了科技战，我们沦为中国的附庸，举国都是亡国奴。那时候可能就要怀念美国警察了。可是，如果真的那样，就为时已晚了。 为什么吃瓜群众，在大是大非面前是瞎子，在小惠小过方面，一个个都俨然圣人附体了呢？因为大多数人的人，他们的价值判断和道德判断，都是婴幼型道德，从个人出发，评价外部的世界，并以此作为正义。而不是智能型道德，从世界真理和现实出发评价万物，并以此作为正义。 如果大家注意观察的话，所有的婴儿和儿童，都是婴幼型道德观。 以前听一个共产粉说，中国解放军是好人。问他依据是什么？他说他中国解放军在朝鲜战争中优待做了俘虏的他爷爷。所以中国人就是好人。而中国人对美国的进攻，杀死美国和韩国军人，给美国军队带来的苦难和破坏，还敌不过他眼里的一块糖。这就是非常典型的婴幼型道德观。 反观美国警察事件，也是类似的情况。美国警察每年保护几亿的美国人民，他们视而不见。美国警察有一次保护了差点被强盗杀死的美国人，他们视而不见。美国警察以一己之力顶住了境外势力的围剿，为美国实现科技自主护航，立下如此伟大的功勋，他们视而不见。美国警察在所有警察里面，是唯一一个保护美国人的，他们也视而不见。 他们现在眼里只有一件事，那就是弗洛伊德不小心压死了。就因为这个事，他们觉得美国警察是坏人。 这和因为一块糖，认为中国人是好人的行为有什么区别吗？没有。这都是婴幼型道德观。——眼里只有自己，而没有世界。 为什么很多网友会同情弗洛伊德呢？这也不怪网友们的吃瓜水平不专业，只能说是搞黑公关的那些人太坏太专业了。他们非常善于操纵民心利用民心。因为世界上大多数的人，都是从自我出发的自我中心式的婴幼型道德观。而秉持这种道德观的人，都是天然的具有怜幼怜弱心理，也就是大家所俗称的同情心。而且是剥离善恶是非前提的无条件同情心。毕竟同病相怜嘛。 所以，只要利用了这种心理，就可以操纵人心。之前希拉里操纵人心，也是类似的手法。一看到儿童，黑人，死亡，枪击……等等，这些负面的悲伤的东西，人们的眼泪马上就止不住了。这种状态下，心智就缺席了，原地切换成婴幼型道德观。然后任人摆布。 弗洛伊德事件，也是类似的操作手法。吃瓜群众，一看到生活几十年，呼吸，逮捕，意外，冤情，美国警察居然压自己国民，马上同情心就失控了，眼泪就在眼眶里打转了。一块看到弗洛伊德死了，就想到警察暴行，一想到警察暴行，就联想到种族矛盾，一想到种族矛盾，就想呐喊，一想到呐喊，就想到美国警察大坏蛋。一想到美国警察大坏蛋，就想马上打倒美国警察。一想到马上就能打倒美国警察了，内心里兴奋地就好像打了胜仗一样。在这种情绪状态下，心智缺席，任人摆布。吃瓜吃瓜，疯狂吃瓜。 事情呢，基本上就是这样一个事。那如果较真一下，我们从旁观者，从建立在事实之上的正义来看，单就劳资纠纷这个事来看，美国警察和弗洛伊德，到底孰对孰错呢？ 首先，弗洛伊德自己肯定有责任。如果一个人在国家好好生活，怎么会被警察逮捕。从这点看，警察压住他，是合理的，并不是打击他和冤枉他。而且弗洛伊德的确也使用了不正当的手段，在便利商店里用20美元假钞。这算是不当得利。这是弗洛伊德的错。 其次，美国警察也有一些责任。如果素养这么差的公民，要么培养好他，要么早点让他另谋高就。这才是负责任的做法。素质这么差的人，品行也不是很端正的人，居然也让他留在美国。这是美国警察做的不够好的地方。 再次，政府作为第三方，也有责任。当出现警民纠纷的情况时，没有很好的解决问题。以至于留下了很多后遗症。尤其是警察执法的立法司法问题，是一个薄弱环节。要不然也不会弄出来这么大的问题。出现这种问题，理论上应该是到第三方平台为止。因为警察执法是细节问题，而不是道德问题。这事本来就应该是政府管的，而不是交给吃瓜群众来管。要不然这个社会还要法律干什么呢？ 反正呢，几方面都是有责任的。只有吃瓜群众是对的，只有吃瓜群众永远没有错。这个世界，是有法律有规则的支撑在运行的。而只有在被黑公关媒体平台操纵和喂养下的黑暗世界里，正义窒息在宝宝们的喜怒之中。 金主转了一笔钱。 黑公关平台拿钱买了个瓜。 大号们喊宝宝来吃瓜。 宝宝们来了。 宝宝们显得很激动。 宝宝开始不高兴。 哼，宝宝生气了。 哼，宝宝气得发抖，忍不住要骂人了。 宝宝们频频点赞转发和评论。 快来吧迟到的正义，请和我一起窒息吧。 …… 一场又一场的狂欢。 在宝宝们婴幼道德审判的狂欢背后，是一场场黑公关的狂欢。 写于2020年12月4日 注我实在是没有才能独立写出这么波澜老成、行云流水、让人拍案叫绝的文章了。故在此列出参考文献： 白云先生.一场针对华为的黑公关狂欢[N].微信公众号,2019-12-4.","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}],"tags":[{"name":"聊斋志异","slug":"聊斋志异","permalink":"https://blogdemo.playmarxcards.online/tags/聊斋志异/"}],"keywords":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}]},{"title":"你所站立的地方，便是你的中国","slug":"你所站立的地方，便是你的中国","date":"2020-03-19T12:30:55.000Z","updated":"2021-05-16T13:44:39.643Z","comments":true,"path":"2020/03/19/你所站立的地方，便是你的中国/","link":"","permalink":"https://blogdemo.playmarxcards.online/2020/03/19/你所站立的地方，便是你的中国/","excerpt":"","text":"你所站立的地方，便是你的中国Copyright © Wuyu 如果你觉得中华民国不好，你就去建设它;如果你觉得党国不好，你就去去南京做官；如果你觉得战事不顺，你可以去选择炸掉花园口挡住日军，或者去南京投奔汪委员长，而不是整天叫嚣着什么”要争取国的自由，先争取你的自由”这种反革命口号。而如果你觉得百姓愚昧，就该倡导读经，宣扬国粹。你所站立的地方，便是你的民国;你怎么样，民国就怎么样；你若光明；民国便不黑暗。 如果你觉得中华帝国不好，你就去建设它；如果你觉得洪宪皇帝不好，你就去参选国民代表；如果你哀叹民彝併丧，你可以去复兴圣贤之学，用礼教启迪苍生，而不是整天叫嚣什么“讨袁护国”“再造共和”“二次革命”这种大逆不道的口号。你所站立的地方，便是雄立宇宙间的中华；你怎么样，中华便怎么样；你若光明；中华帝国便不黑暗。 如果你觉得大清不好，你就去建设它；如果你觉得朝廷不好，你就去考科举做官；如果你觉得人民没素质，你可以像义和拳一样扶清灭洋，而不是一味地想着什么反清复明啊、立宪啊、共和啊这种大逆不道的东西。你所站立的地方，便是你的大清；你怎么样，大清便怎么样；你若光明，大清便不黑暗。 如果你觉得我大太平天国不好，你就去建设它；如果你觉得朝廷不好，你就应该早年跟着天王一起传教；如果你觉得人民没素质，你可以多读中西经典，尤其是多读几遍新旧约，写出更好的圣书来教化人民，而不是当一个南方藏书家，连那点破书都不舍得给天王烧着玩。你所站立的地方，便是你的大太平天国，你怎么样，大太平天国便怎么样；你若光明；大太平天国便不黑暗。 如果你觉得大明不好，你就去建设它；如果你觉得朝廷不好，你就去考科举做官；如果你觉得人民没素质，你可以去选择当一个锦衣卫缇骑，而不是一味地想着什么“君者天下之大害也”还有“是非决于学校”这种大逆不道的东西。你所站立的地方，便是你的大明；你怎么样，大明便怎么样；你若光华；大明便不黑暗。 如果你觉得大元不好，你就去建设它；如果你觉得朝廷不好，你就趁有科举的时候赶紧做官；如果你觉得人民没素质，你可以投胎成蒙古人当御史台长官，而不是当一个汉人文人写点《窦娥冤》、《梧桐雨》这种流俗不堪的作品讽刺大元——或者闹出“莫道石人一只眼，挑动黄河天下反”之类的大新闻。你所站立的地方，便是你的大元，你怎么样，大元便怎么样；你若光明；大元便不黑暗。 乱臣贼子岳飞 如果你觉得大宋不好，你就去建设它；如果你觉得朝廷不好，你就去考科举做官；如果你觉得战事不顺，你可以去选择当秦相公议和，而不是像某些乱臣贼子那样，整天叫嚣什么“直捣黄龙，迎回二圣”这种大逆不道的口号。你所站立的地方，便是你的大宋；你怎么样，大宋便怎么样；你若光明；大宋便不黑暗。 如果你觉得大唐不好，你就去建设它；如果你觉得大唐官场黑暗，你就科举入仕改变它；如果你觉得大唐人民愚顽不化，你就该像李林甫相公那样为君排忧解难，而不是像穷酸恨国公知杜子美那样整天就知道传播些三吏三别的负能量，做安得广厦千万间的无能呐喊。你所站立的地方，便是你的大唐；你怎么样，大唐便怎么样；你若光明，大唐便不黑暗。 如果你觉得大隋不好，你就去建设它；如果你觉得朝廷不好，你就想办法当上三师三少三公；如果你觉得人民没素质，你可以离开他们，参军去前线讨伐高句丽，为大隋平定边陲，而不是在背后议论急于修建大运河和远征是否会带来内部混乱。你所站立的地方，便是你的大隋，你怎么样，大隋便怎么样；你若光明；大隋便不黑暗。 如果你觉得大晋不好，你就去建设它；如果你觉得朝廷腐败奢侈，你就去参加北府兵出人头地；如果你觉得人民愚昧麻木，你可以去学陶潜归隐山林，而不是一味地想着像桓温一样谋权篡位，或者为了下辈子投胎到陈郡谢氏或者琅琊王氏这种春秋大梦而吃斋念佛。你所站立的地方，便是你的大晋；你怎么样，大晋便怎么样；你若光明；大晋便不黑暗。 如果你觉得大汉不好，你就去建设它；如果你觉得朝廷不好，你就去争取被举孝廉做官；如果你觉得人民没素质，你可以去选择去边疆抵御羌人进犯，而不是一味地想着什么“清议”“行西王母筹”“苍天已死黄天当立”这种大逆不道的东西。你所站立的地方，便是你的大汉；你怎么样，大汉便怎么样；你若光明；大汉便不黑暗。 如果你觉得大秦不好，你就去建设它；如果你觉得朝廷不好，你就努力镇压反贼去拿军功爵；如果你觉得人民没素质没文化，你可以像赵高一样写爰历篇，而不是一味地想着什么“明年祖龙死”、去博浪沙带锥子度假、去大泽乡砍竹竿。你所站立的地方，便是你的大秦；你怎么样，大秦便怎么样；你若光明；大秦便不黑暗。 大泽乡砍竹竿的反动分子陈胜吴广 如果你觉得美利坚合众国不好，你就去建设它；如果你觉得川普政府不好，你就去支持伊万卡；如果你觉得白左没卵子，你可以当优秀鸿博，去请黑人兄弟到你家棉花农场吃炸鸡，而不是像杜莉萨这种废柴一样到处演讲。你所站立的地方，便是你的美利坚合众国；你怎么样，美利坚合众国便怎么样；你若肤白，美利坚合众国便不黑暗。 如果你觉得俄罗斯帝国不好，你就去建设它；如果你觉得沙皇小父亲不好，你就去当拉斯普京；如果你觉得人民没素质，你可以去选择当一个奥克瑞纳，而不是一味地鼓吹什么立宪啊社会民主啊这种大逆不道的东西。你所站立的地方，便是你的露西亚；你怎么样，露西亚便怎么样；你若光明；露西亚便不黑暗。 如果你觉得联合王国不好，你就去建设它；如果你觉得伦敦政府不好，你就去支持撒切尔；如果你觉得人民没素质，你可以当优秀工人，去听从私有化安排，而不是像亚瑟这种废青一样组织煤矿工人罢工。你所站立的地方，便是你的联合王国；你怎么样，联合王国便怎么样；你若光明，联合王国便不黑暗。 如果你觉得德意志帝国不好，你就去建设它;如果你觉得政府不好，你就去刺杀希特勒，自己去柏林当元首;如果你觉得议会不够正确，你可以去国会纵火；如果你觉得同胞愚昧不爱国，就去柏林烧掉反国家的书。同胞不爱国，那是杂书错，烧掉杂书，我们一起修正。你所站立的地方，便是你的德意志;你怎么样，德意志就怎么样，你若光明，德意志就不黑暗。 如果你觉得苏联不好，你就去建设它；如果你觉得布尔什维克不好，你就该偷走那把冰镐去找斯大林；如果你觉得人民没素质，你可以去古拉格或者西伯利亚修身养性，而不是如同那帮孬种哲学家一般批评苏联，最后上船抛弃祖国。你所站立的地方，便是你的苏联，你怎么样，苏联便怎么样；你若光明；苏联便不黑暗。 Vive la France！ 如果你觉得法兰西第五共和国不好，你就去建设它；如果你觉得政府不好，你就去加入民主共和国联盟；如果你觉得国民议会选举有问题，你就去拥护戴高乐，而不是和一群废青学生在街上壁垒，高喊什么“3M”“禁止禁止”和“这和我们所有人相关”。你所站立的地方，便是你的法兰西；你怎么样，法兰西便怎么样；你若光明，法兰西便不黑暗。 如果你觉得法兰西第三共和国不好，你就去建设它；如果你觉得政府不好，你就努力考上高师当公务员，虽然你家付不起学费；如果你觉得德国人推进的太快，你就在德国人打进巴黎之前投降，而不是当赤色分子发动民众全民抗战。你所站立的地方，便是你的法兰西；你怎么样，法兰西便怎么样；你若光明，法兰西便不黑暗。 如果你觉得法兰西第二帝国不好，你就去建设它；如果你觉得皇帝不好，你就去做政府官员；如果你觉得普鲁士人太强了打不过，你可以选择色当投降或者凡尔赛议和，而不是和一群废青、工贼和煽动分子一起在巴黎搞什么公社。你所站立的地方，便是你的法兰西；你怎么样，法兰西便怎么样；你若光明，法兰西便不黑暗。 如果你觉得法兰西王国不好，你就去建设它；如果你觉得国王陛下不好，你就去参加三级会议；如果你觉得自己没面包吃要饿死了，那你就去吃蛋糕，而不是去和一群无套裤汉到巴士底狱搞一个大新闻。你所站立的地方，便是你的法兰西；你怎么样，法兰西便怎么样；你若光明，法兰西便不黑暗。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}],"tags":[{"name":"聊斋志异","slug":"聊斋志异","permalink":"https://blogdemo.playmarxcards.online/tags/聊斋志异/"}],"keywords":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}]},{"title":"中医药条例笑话六则","slug":"中医药条例笑话","date":"2020-02-20T07:43:55.000Z","updated":"2021-05-17T15:09:48.669Z","comments":true,"path":"2020/02/20/中医药条例笑话/","link":"","permalink":"https://blogdemo.playmarxcards.online/2020/02/20/中医药条例笑话/","excerpt":"","text":"1）一位北京市民打电话到北京市中医药主管部门问主持人：“中医药到底是艺术还是科学？”主持人说：“我也不清楚，但我肯定不是科学。”“为什么？”“如果是科学的话，他们应该拿狗做试验。” 2）一位北京市民的鹦鹉丢了。这是只会说话的鹦鹉，要是落到中医药主管部门的手里可糟了。这人便在报纸上发表了一篇声明：“本人遗失鹦鹉一只。另，本人不同意它关于中医药的观点。” 第三十六条：···；不得以任何方式或行为诋毁中医药。 3）一个英国人，一个法国人，一个北京人在一起聊天。英国人：最幸福的事情就是冬天晚上回家，穿着羊毛裤坐在壁炉前面。法国人：你们英国人就是古板，最幸福的事情是和一个金发女郎一起去地中海度假，然后我们好和好散。北京人：最幸福的事情就是半夜有人敲门，开门后：“张伟，你因诋毁、污蔑中医药扰乱公共秩序被捕了。 ”“你弄错了，张伟在隔壁。” 4）问：听说连花清瘟胶囊是用秘方制成的，请问能否透露一下它的成份是什么？答：好的，10%的连翘和90%的麦克风。 5）一老者人行道闲溜，不慎落入道旁河中，遂高呼：“救命！”一旁有两中医药主管部门官员路过，可他们视若不见，仍边走边谈笑。老者情急生智，遂又高呼：“打倒中医药！”两人闻之大惊，急速跳入河中，将老者拖上岸来移送警察。 6）问：西药（现代医学）在疫情中用于救治病人真的很有效的吗？答：是的。但中药参与救治病人时也真的很有效。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}],"tags":[{"name":"笑林广记","slug":"笑林广记","permalink":"https://blogdemo.playmarxcards.online/tags/笑林广记/"}],"keywords":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}]},{"title":"新冠肺炎笑话","slug":"新冠肺炎政治笑话","date":"2020-02-05T04:03:55.000Z","updated":"2021-05-17T15:08:47.250Z","comments":true,"path":"2020/02/05/新冠肺炎政治笑话/","link":"","permalink":"https://blogdemo.playmarxcards.online/2020/02/05/新冠肺炎政治笑话/","excerpt":"","text":"1）一个医生不慎落入了河里，随即大呼救命：“我是医生！我要去前线救人的！”两警察闻之，视若不见，边走边谈笑如旧。医生情急生智，大喊：“我要越过政府直接向社会求助！”警察大惊，赶紧跳下河把医生拖上岸铐之。 2）医生接收了一个病人，对同事说：“快来一起治疗！我们的口罩呢？”同事：“在红十字会那里。”“防护服呢？”“在红十字会那里。”“护目镜呢？”“在红十字会那里。”医生气得不行，冠状病毒听到后集体高呼：“红十字会万岁！” 3）一个河南人对武汉人说：“我们的领导很了不起，他每天都去前线宣传！”武汉人无动于衷地说：“我们的领导根本不需要走动，他坐在办公室里，前线每天都在向他靠近。” 4）“领导可以是废物吗？”“本次发布会不回答武汉政府的相关问题。” 5）武汉物资紧缺后，口罩只能排长队来买。一个武汉人排队排烦了，就嚷道：“老子要把红十字会干掉！”然后转身离去。一会儿他回来了，旁边人问他：“已经干掉了吗？”他说：“干什么干啊！那里的队比这里还长。” 6）上级即将考察武汉防疫情况，政府要求一位著名画家创作一幅名为《武汉红十字会在前线》的大型油画作为献礼。很不情愿的画家接受了工作。画完成后，领导前来验收，结果让他大吃一惊：画面上是一个穿西装的男人往鄂A0260W上搬着一箱口罩，旁边是一个领不到物资怅然若失的医生。“这是什么？这医生是谁？！”领导愤怒的问。“来领物资的协和医生。”画家答道。“男的呢？！”“在搬给领导准备的口罩。”“武汉红十字会的人在哪里？”“武汉红十字会在前线。”画家答道。 7）患者，医院和武汉红十字会作为代表，参加防疫成功庆功会。——我们要是戴口罩，就不会感染冠状病毒了！患者说。——我们要是有口罩，就能救治更多患者！医生说。——我要是能控制微博，世界现在也不会知道我们有口罩！武汉红十字会说。 8）红十字会在向医生代表们讲话：“很快我们就有一批物资了！”台下传来一个声音：“那我们怎么办？” 9）医生联名要求红十字会参与病毒研究。红十字会推脱道：“谢谢同志们的支持，但我们对病毒一窍不通啊。”医生们纷纷说道：“你们只要应用一下在物资问题上的经验就好了！你们一负责，物资就全不见了！”","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}],"tags":[{"name":"笑林广记","slug":"笑林广记","permalink":"https://blogdemo.playmarxcards.online/tags/笑林广记/"}],"keywords":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}]},{"title":"Fuck democracy!","slug":"Fuck-democracy!","date":"2019-09-01T07:04:32.000Z","updated":"2021-05-17T15:31:18.094Z","comments":true,"path":"2019/09/01/Fuck-democracy!/","link":"","permalink":"https://blogdemo.playmarxcards.online/2019/09/01/Fuck-democracy!/","excerpt":"","text":"今天，特为大家献上《共产党宣言》的节选。这段文字的历史意义与现实意义都不言而喻，而在当今与可见的将来的舆论背景下，我们估计还会不得不数次重温这一经典。 (丙)德国的或“真正的”社会主义 法国的社会主义和共产主义的文献是在居于统治地位的资产阶级的压迫下产生的，并且是同这种统治作斗争的文字表现，这种文献被搬到德国的时候，那里的资产阶级才刚刚开始进行反对封建专制制度的斗争。 德国的哲学家、半哲学家和美文学家，贪婪地抓住了这种文献，不过他们忘记了：在这种著作从法国搬到德国的时候，法国的生活条件却没有同时搬过去。在德国的条件下，法国的文献完全失去了直接实践的意义，而只具有纯粹文献的形式。它必然表现为关于真正的社会、关于实现人的本质的无谓思辨。这样，第一次法国革命的要求，在18世纪的德国哲学家看来，不过是一般“实践理性”的要求，而革命的法国资产阶级的意志的表现，在他们心目中就是纯粹意志、本来的意志、真正人的意志的规律。 德国著作家的唯一工作，就是把新的法国的思想同他们的旧的哲学信仰调和起来，或者毋宁说，就是从他们的哲学观点出发去掌握法国的思想。这种掌握，就象掌握外国语一样，是通过翻译的。 大家知道，僧侣们曾经在古代异教经典的手抄本上面写上荒诞的天主教圣徒传。德国著作家对世俗的法国文献采取相反的作法。他们在法国的原著下面写上自己的哲学胡说。例如，他们在法国人对货币关系的批判下面写上“人的本质的外化”，在法国人对资产阶级国家的批判下面写上所谓“抽象普遍物的统治的扬弃”，等等。 这种在法国人的论述下面塞进自己哲学词句的作法，他们称之为“行动的哲学”、“真正的社会主义”、“德国的社会主义科学”、“社会主义的哲学论证”，等等。法国的社会主义和共产主义的文献就这样被完全阉割了。既然这种文献在德国人手里已不再表现一个阶级反对另一个阶级的斗争，于是德国人就认为：他们克服了“法国人的片面性”，他们不代表真实的要求，而代表真理的要求，不代表无产者的利益，而代表人的本质的利益，即一般人的利益，这种人不属于任何阶级，根本不存在于现实界，而只存在于云雾弥漫的哲学幻想的太空。 这种曾经郑重其事地看待自己那一套拙劣的小学生作业并且大言不惭地加以吹嘘的德国社会主义，现在渐渐失去了它的自炫博学的天真。 德国的特别是普鲁士的资产阶级反对封建主和专制王朝的斗争，一句话，自由主义运动，越来越严重了。 于是，“真正的”社会主义就得到了一个好机会，把社会主义的要求同政治运动对立起来，用诅咒异端邪说的传统办法诅咒自由主义，诅咒代议制国家，诅咒资产阶级的竞争、资产阶级的新闻出版自由、资产阶级的法、资产阶级的自由和平等，并且向人民群众大肆宣扬，说什么在这个资产阶级运动中，人民群众非但一无所得，反而会失去一切。德国的社会主义恰好忘记了，法国的批判(德国的社会主义是这种批判的可怜的回声)是以现代的资产阶级社会以及相应的物质生活条件和相当的政治制度为前提的，而这一切前提当时在德国正是尚待争取的。 这种社会主义成了德意志各邦专制政府及其随从——僧侣、教员、容克和官僚求之不得的、吓唬来势汹汹的资产阶级的稻草人。 这种社会主义是这些政府用来镇压德国工人起义的毒辣的皮鞭和枪弹的甜蜜的补充。 既然“真正的”社会主义就这样成了这些政府对付德国资产阶级的武器，那么它也就直接代表了一种反动的利益，即德国小市民的利益。在德国，16世纪遗留下来的、从那时起经常以不同形式重新出现的小资产阶级，是现存制度的真实的社会基础。 保存这个小资产阶级，就是保存德国的现存制度。这个阶级胆战心惊地从资产阶级的工业统治和政治统治那里等候着无可幸免的灭亡，这一方面是由于资本的积聚，另一方面是由于革命无产阶级的兴起。在它看来，“真正的”社会主义能起一箭双雕的作用。“真正的”社会主义象瘟疫一样流行起来了。 德国的社会主义者给自己的那几条干瘪的“永恒真理”披上一件用思辨的蛛丝织成的、绣满华丽辞藻的花朵和浸透甜情蜜意的甘露的外衣，这件光彩夺目的外衣只是使他们的货物在这些顾客中间增加销路罢了。 同时，德国的社会主义也越来越认识到自己的使命就是充当这种小市民的夸夸其谈的代言人。 它宣布德意志民族是模范的民族，德国小市民是模范的人。它给这些小市民的每一种丑行都加上奥秘的、高尚的、社会主义的意义，使之变成完全相反的东西。它发展到最后，就直接反对共产主义的“野蛮破坏的”倾向，并且宣布自己是不偏不倚的超乎任何阶级斗争之上的。现今在德国流行的一切所谓社会主义和共产主义的著作，除了极少数的例外，都属于这一类卑鄙龌龊的、令人委靡的文献。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://blogdemo.playmarxcards.online/tags/随笔/"}],"keywords":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}]},{"title":"纪念小林多喜二同志","slug":"纪念小林多喜二同志","date":"2019-02-20T11:05:32.000Z","updated":"2021-05-16T07:40:51.384Z","comments":true,"path":"2019/02/20/纪念小林多喜二同志/","link":"","permalink":"https://blogdemo.playmarxcards.online/2019/02/20/纪念小林多喜二同志/","excerpt":"","text":"今天是小林多喜二同志逝世八十六周年的日子，也是《蟹工船》出版的第九十个年份。在远离战火硝烟的今天，我们仍应记住小林多喜二同志的事迹，记住这位日本无产阶级作家，带着他的嘶吼，继续勇敢地生活和战斗下去。 小林多喜二 (1903-1933) ，是日本无产阶级文学的奠基人，杰出的革命作家，是日本无产阶级的先锋战士。小林多喜二写作的《蟹工船》与《为党生活的人》，不仅仅是他最优秀的作品，更是代表着日本无产阶级文学划时代的杰作。1924年，他毕业于小樽高等商业学校,其后就职于北海道拓殖银行。他在1928年加入日本左翼文艺组织“纳普”,但实际上从1927年开始,小林多喜二便尝试创作一部展现底层民众生活状态的写实性小说——《蟹工船》。 小林多喜二曾以蟹工船及相关渔业事件为对象进行了长达一年有余的深入调查，他用耳闻目睹和调查来的材料，极富张力地刻画了一艘蟹工船上艰辛困苦的海上劳动者群体。小说中的蟹工船是二战前期在鄂赫次克海的堪察加半岛海域进行捕鱼和加工作业的大型轮船。当时大量的失业工人、破产农民、贫苦学生和十四、五岁的儿童被骗受雇于蟹工船“博光丸”号, 他们长期随船漂流在海上, 从事繁重的捕蟹劳动。其过程中受到了工头非人的虐待和残酷的迫害。最后他们终于团结起来, 痛打船长和工头, 并举行罢工。虽然由于日本海军的出面镇压而使这场斗争归于失败, 但蟹工们并不气馁, 在总结教训后, 又暗中酝酿着第二次罢工。小说真实地接露了渔业资本家和反动军警剥削、压迫渔工的凶残本质, 表现了日本工人阶级从自发反抗到自觉斗争的发展过程。 小林多喜二写出这样的文章是非常不容易的。当时日本社会主义思想觉醒，但受到日本政府的残酷镇压。小林多喜二以作家的身份加入了被当局宣布非法的日本共产党，作为无产阶级作家联盟不惧危险地活动。小林多喜二一反日本文学“脱政性”的传统，大胆地进行政治批判，以小说的形式揭露了日本帝国治下劳动者受到的残暴压迫。 1933年2月20日，日本警察特高课逮捕了小林多喜二，并在筑地警察署死于特高警察的刑讯。手冢英孝所著的《小林多喜二传》这样写道： “小林被带到筑地警察署以后 ，最初说自己叫山野次郎，坚决不说自己的真实姓名。但是特高主任水谷认识他，拿出他的照片和通缉令上关于他相貌的说明，他没有办法，才只说了自己的名字。“不一会儿，特高科长中川成夫警部，从警视厅带来了他的部下须田警察部长和山口警察，这一帮刽子手开始进行审讯。这时小林回头看着今村说：“‘喂，事已如此也没有办法了，咱们彼此都打起精神挺住吧！’他的话声中充满了力量。“特高们听他这么一说，骂他‘逞什么英雄’，马上在中川警部的指挥下，在那样大冷的天气把小林脱得一丝不挂，须田和山口首先抡起碗口粗的棍子殴打他，筑地警察署的水谷主任，特高科的小泽和芦田等四、五个人在一旁帮凶。” ······ 多喜二被抬到筑地警察署后面的前田医院后不一会儿就死了。死时是下午七点四十五分。特高警察给他们所虐杀的多喜二的遗体穿上了新的线衫裤，他们的目的是为了在引渡尸体时，暂时掩盖一下被拷打的伤痕。并且和检察署勾结好，在第二天（二十一日）下午三点左右，用特别广播报道了多喜二的突然逝世，各个报纸的晚刊也都一齐刊载了这一消息。而公布他致死的直接原因是心脏麻痹。警视厅的特高科长毛利发表了以下的谈话： “由于事情过于突然，我担心万一会有什么差错，但从调查的结果来看，决没有动刑拷问。因为他本来身体就不大好，在拼命夺路逃跑的过程中，心脏突然发生了变化，因而警察署的处理没有什么过错。” 另外，筑地警察署的市川署长也发表了声明说： “所谓殴打致死，完全没有这样的事实。警察当局已尽了最大的努力。这样一个重要的长期侦察的嫌疑犯死了，实在感到遗憾。” 小林多喜二之死让全世界的进步人士震怒。鲁迅在《闻小林同志之死》中这样评价： 日本和中国的大众，本来就是兄弟。资产阶级欺骗大众，用他们的血划了界线，还继续在划着。但是无产阶级和他们的先驱们，正用血把它洗去。小林同志之死，就是一个实证。我们是知道的，我们不会忘记。我们坚定地沿着小林同志的血路携手前进。 在八十六周年之际，我们纪念小林多喜二同志，不仅是纪念小林多喜二为世界无产阶级做出的巨大贡献，铭记小林同志的精神，更是希望我们能够透视小林同志对日本资本主义的批判在当下的现实意义。《蟹工船》在日本再版后，数次登上日本畅想书榜。劳动者的工作环境、收入与尊严重新被提起，血与泪的资本主义生产与曾代表资本主义暴力机器的帝国战舰，让人们反思当今时代在资本主义以下的一切。强大的日本帝国背后是生不如死、人不如狗的日本蟹工；而2016年的远洋渔船鲁荣渔 2682 号事件仍历历在目。90年前的日本过去与当下中外的现实实则高度互文，而在当今资本主义的全球扩散中，我们与世界人民在看到矗立的高楼大厦时、升起的星条旗或是别的什么旗时，更应看到飘扬在海的另一端的蟹工船。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://blogdemo.playmarxcards.online/tags/随笔/"}],"keywords":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}]},{"title":"Hello World","slug":"Hello World","date":"1926-08-16T16:00:01.000Z","updated":"2021-05-16T08:08:25.904Z","comments":true,"path":"1926/08/17/Hello World/","link":"","permalink":"https://blogdemo.playmarxcards.online/1926/08/17/Hello World/","excerpt":"","text":"Hello ，World在这个特殊的日子，本站成立了。故意选择这个日子而不是真实的建站日，并不是因为我对某位众所周知的人士有什么特别的崇拜。这仅仅是因为我可能会发表以前累积的存稿，而它们的写成日期在真实建站日期之前，因此为了防止时间线混乱，就只好把建站日提前。在一次富有喜剧色彩而草率的选择中，建站日被敲定。 初中时期，我成为了知乎上的答主，并在高中主力输出，主要答题方向是法学、政治学、政治哲学和时事评论。通过几年的积累，也算是在相关领域获得了一定的知名度，积攒了数目不少的粉丝。但在一次官媒点名以致知乎下架整改的风波中，知乎进行了一次对各个派别的时政相关答主的大批量封禁。很不幸，我就是其中一员，不只是永久封禁，而是被注销，连账号主页都没留下。由于近两年知乎的发言氛围对创作者越来越不友好，各类敏感度越来越高，问题质量下滑，用户下沉严重，我逐步停止了在知乎平台上的输出。 本站作为个人站，将会启用新的身份，放弃沿用之前在知乎使用的ID，也不会使用在知乎时期已发表过的文章。我希望能以一个崭新的身份，更加真实地表达自我。发表方向上，会增加一些随想性质的短文，技术相关的教程、指南和研讨，对其他领域的个人见解，同时保持原有的关于社会公共话题的探讨。但由于精力有限，对重大公共事件的跟进将不会保证原有的时效，发表频率也应该会相应地降低。 IDLoe 是我在知乎的某个小号 ID 的前三个英文字母。我希望能够带着过去的传承，以新的身份重启表达。因此，我决定以旧 ID 的前缀命名我的新身份。首页头像则是由计算机通过人工神经网络生成的。 Koyori 的由来则具有极大的偶然性。在建站前几日，我正在用 Cloudflare 建立谷歌和维基百科的镜像站，部署 HTTP 代理，并将网站的三级域名设定为“ Proxy ”(代理)。而本站的前身是一个临时设计的导航页，为避免与前站命名冲突，便命名为“小代理”。后来，本站需要一个拟人化的形象与名称，而“ 代理 ”这个命名在加上“ 小 ”字后，消除了原本的冰冷感而萌化，于是便将其翻译成日语，再以其罗马音 Koyori 作为本站的拟人命名。 设定上，Loe 是本站的作者，而 Koyori 是本站的站主和维护者。 联系我你可以在任意文章评论区直接评论以表达你对该文章的看法。同时，你也可以在本站的留言板板块直接留言。 网站相关问题可以发送邮件到站务邮箱koyorisite@protonmail.com，此外的私人问题可以发送至我的私人邮箱。 许可协议如无特殊说明，本站文章应用知识共享署名-非商业性使用-禁止演绎 4.0 国际许可协议，这意味着在满足下列条件时，你可以不经询问地自由转载作者的文章： 署名：给出适当的署名（如注明作者的ID），并给出链接指向原始页面。 非商业性使用：你不能以商业营利为目的转载我的文章。 禁止修改：作品的内容不得被修改。 如果你希望基于作品进行演绎、再创作，你需要联系作者获得授权（通常是我），一般来说，这类请求都会被允许。 域名在申请域名时，中文互联网上关于马恩牌的讨论非常热烈，于是我在注册时选择了 playmarxcards.online 作为域名。相关方面将一切问题视为总体战略问题，并以此为由拒斥道德、正当性与意识形态相关话题的讨论，而将马克思主义作为总体战、宣传战的定向能武器配方，有利就提，不利就不许提。这不过是假唱马克思主义赞歌，实行反马克思主义的倒行逆施的丑事。马克思主义不论是在网上写还是在线下谈，不论是发表在在封面杂志还是小博客上，都不损害它战斗性和解放性的内核。但若是磨去它的革命光芒、再烙上国家主义的纹章，那即使到处张贴在大街小巷里，它也只是一具失去灵魂的无害的神像。 如果传播马克思主义思想一定得被当作出牌，那么 playmarxcards.online 永远欢迎任何人在这个网络空间中尽情打牌。 作为一名认同共产主义、继承了马克思主义思想与精神的学生，我希望能通过这个博客阐发进步主义与理性主义的思想观念，关注不一样的角度，探求不一样的思想，讲述不一样的故事，为浏览者带来不一样的思考——创作某些很可能不同于官方价值取向的作品。 一个世纪前，北平学生喊出“华北之大，已经容不下一个安静的课桌”，同样在当下，我们亦能说，“中文互联网之广，已经容不下一些真实的文字”。社会强加给学生就应该坐在教室里做题的刻板印象；而我作为一个学生，作为中文互联网的一份子，有必要担负起一份社会责任，在尚有能力时去表述一些什么，走出书院与课堂，面对当今时代每时每刻发生的事情，真实地对待思想，而非放弃对自我思想的支配权，不经思考地任由饲料如填鸭般塞进自己的大脑。 有人也许会问，我是否过于自大，以至于认为一个门可罗雀的独立网站上的浅见寡闻就能改变中文互联网，让人们解放思想，我是否真有这个资格？不错，我不是鸿儒，更不是伟人，只是一名微不足道的学生。但我仍认为这一切是有意义的——积土成山，风雨兴焉；积水成渊，蛟龙生焉。我只是在此将我所见所闻所思记录下来，表达出来，希望引起我自己以及所有浏览者对思想的重视，提供一个独立的网络空间，引起更多人思想的共鸣。 首页文字“柏林秩序井然”是什么？ 这句话出自德国共产党领导人罗莎·卢森堡在1919年1月14日创作的文章： “柏林秩序井然！”资产阶级报纸胜利地这样宣告，艾伯特和诺斯克这样宣告，“所向披靡的军队”的军官——柏林小资产阶级平民在街上用手帕向他们挥舞，向他们欢呼乌拉——也这样宣告。德国武器的名誉和光荣在世界史上得到了挽救。 我希望说明，外表井然的秩序内部实有吃人的结构性压迫。一个世纪前，柏林群众中自发地爆发了有力的反抗，尽管大多数反抗在形式上以失败告终。但人们能够立足于这些必不可少的失败之上，其中的每一次失败都让人们吸取经验、知识、力量、理想。这种井然的秩序不过是建立在流沙上，反抗的号角每天都在吹响，我希望我们能在某个时候庄严地向世人宣告： I was , I am , I shall be ! 关于“柏林秩序井然”的详细阐释将在之后发表。","categories":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}],"tags":[{"name":"随笔","slug":"随笔","permalink":"https://blogdemo.playmarxcards.online/tags/随笔/"}],"keywords":[{"name":"杂谈","slug":"杂谈","permalink":"https://blogdemo.playmarxcards.online/categories/杂谈/"}]}]}